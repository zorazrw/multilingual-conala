[
    {
        "intent": "¿Cómo obtengo los valores de un diccionario que contiene otro dicccionario en Python?",
        "rewritten_intent": "¿Cómo obtener un dictionario `result` con las llaves `keys` y los valores `val` de un diccionario `dic`?",
        "snippet": "result = defaultdict(list)\nfor d in dic.values():\n    for k,v in d.items():\n        result[k].append(v)",
        "question_id": 54979
    },
    {
        "intent": "Cómo agrupar los elementos de una lista por usuario y con el total de veces que el usuario ha hecho un registro?",
        "rewritten_intent": "¿Cómo agrupar los elementos de una tabla en una base de datos `data` por usuario y con el total de veces que el usuario ha hecho un registro?",
        "snippet": "def indexOn( data):\n    inx= defaultdict(list)\n    for t in data:\n            inx[t[0]].append(t)\n    return inx\n\nsortData = indexOn(data)\n\nfor key in sortData: \n    series.append({\n        'name': key,\n        'data': sortData[key].__len__()\n    })\n",
        "question_id": 7699
    },
    {
        "intent": "Encontrar el máximo de una función en python",
        "rewritten_intent": "¿Cómo encontrar el máximo de una función `y` que depende de `x`?",
        "snippet": "x = symbols('x')\ny = -(x-0.4)**2+10\ndy = diff(y)\nprint(dy)\nsol = solve(dy)\nprint(sol)",
        "question_id": 39675
    },
    {
        "intent": "¿Cómo crear un diccionario con funciones en Python?",
        "rewritten_intent": "¿Cómo crear un diccionario con funciones `fun1`, `fun2`, `fun3`?",
        "snippet": "operaciones = { \n'1': fun1, \n'2': fun2, \n'3': fun3,\n}",
        "question_id": 64006
    },
    {
        "intent": "Django admin: ¿cómo agregar la suma de todos los registros de un modelo?",
        "rewritten_intent": "¿Cómo agregar la suma de todos los elementos de un modelo `transacciones` en el admin de Django?",
        "snippet": "class TransaccionesAdmin(admin.ModelAdmin):\n\n    def changelist_view(self, request, extra_context=None):\n        total = Transacciones.objects.aggregate(total=Sum('monto'))['total']\n        context = {\n            'total': total,\n        }\n        return super(TransaccionesAdmin, self).changelist_view(request, extra_context=context)\n\nadmin.site.register(Transacciones, TransaccionesAdmin)",
        "question_id": 3285
    },
    {
        "intent": "¿Como hago para editar un registro ya existe en la base de datos en Django y que no me agregue otro?",
        "rewritten_intent": "¿Cómo crear una vista `editarempleado` que edite los datos de una instancia del modelo `Empleado`?",
        "snippet": "def editarempleado (request, id_empleado):\n  p = Empleados.objects.get(pk=id_empleado)\n  if request.method == \"POST\":\n     form = EmpleadoForm(request.POST,instance=p)\n     if form.is_valid():\n        p.nombre_empleado = request.POST['nuevo_nombre']\n        p.apellido_empleado = request.POST['nuevo_apellid'] \n        p.save()\n        return redirect ('empleados')\n     else : \n        form = EmpleadoForm(instance=p)\n        ctx = {'formulario' : form}\n        return render_to_response('empleados/editar.html', ctx, context_instance=RequestContext(request)) #esto lo pongo porque si el formulario no es valido tiene que devolver el error (estoy repitiendo mucho codigo arreglalo)\n else:\n    form = EmpleadoForm(instance=p) \n\n ctx = {'formulario' : form}\n\n return render_to_response('empleados/editar.html', ctx, context_instance=RequestContext(request))",
        "question_id": 23831
    },
    {
        "intent": "¿Cómo subir archivos en Python 3?",
        "rewritten_intent": "¿Cómo subir archivos a una carpeta local ubicada en `ruta` después de abrirlo?",
        "snippet": "\"def abrir(self):\n    with open(file, 'rb') as fsrc:\n        a = fsrc.read()\n    shutil.copyfile(file, ruta)",
        "question_id": 19921
    },
    {
        "intent": "Cómo concatenar variables en un template de Django usando tags",
        "rewritten_intent": "¿Cómo concatenar dos variables `a` y `b` en un template de Django?",
        "snippet": "{{ a|add:b }}",
        "question_id": 2657
    },
    {
        "intent": "¿Como capturar parametros enviado por el metodo GET?",
        "rewritten_intent": "¿Cómo capturar el parámetro `par` enviado por el método GET?",
        "snippet": "request.GET.get(par)",
        "question_id": 10366
    },
    {
        "intent": "Como duplicar los elementos de una lista excluyendo los extremos en python",
        "rewritten_intent": "¿Cómo duplicar los elementos de una lista `list` excluyendo los extremos?",
        "snippet": "list(sum(zip(list, list[1:]), ()))",
        "question_id": 25024
    },
    {
        "intent": "Python: ¿cómo listar todos los archivos y carpetas de una carpeta a partir de una ruta?",
        "rewritten_intent": "¿Cómo listar todos los archivos y carpetas de una carpeta a partir de una ruta `ruta`?",
        "snippet": "def ls(ruta):\n    listaarchivos = []\n    for (_, _, archivos) in walk(ruta):\n        listaarchivos.extend(archivos)\nreturn listaarchivos",
        "question_id": 37821
    },
    {
        "intent": "¿Cómo contar las llamadas totales al método de una clase?",
        "rewritten_intent": "¿Cómo contar las llamadas totales al método de una clase `C`?",
        "snippet": "Class C:\n    def _incrementa_contador_renombres(cls):\n        cls.total_renombres += 1",
        "question_id": 774
    },
    {
        "intent": "¿Cómo contar las llamadas totales al método de una clase?",
        "rewritten_intent": "¿Cómo contar las llamadas totales al método de una clase `C`?",
        "snippet": "class NaveEspacial:\n    llamadas_totales = 0",
        "question_id": 774
    },
    {
        "intent": "Python/Tkinter ¿Es posible rotar imágenes .jpg o .png y texto en un canvas en Tkinter?",
        "rewritten_intent": "¿Cómo rotar una imagen `img` en un ángulo de `x` grados en Tkinter?",
        "snippet": "im = Image.open(img)\nim.rotate(x).show()",
        "question_id": 38658
    },
    {
        "intent": "Obtener timeline de un usuario de Twitter con tweepy",
        "rewritten_intent": "¿Cómo obtener el timeline de un usuario `user` en twitter con tweepy?",
        "snippet": "CONSUMER_SECRET = environ['CONSUMER_SECRET']\nACCESS_TOKEN = environ['ACCESS_TOKEN']\nACCESS_TOKEN_SECRET = environ['ACCESS_TOKEN_SECRET']\n\n\nauth = tweepy.OAuthHandler(CONSUMER_KEY, CONSUMER_SECRET)\nauth.set_access_token(ACCESS_TOKEN, ACCESS_TOKEN_SECRET)\n\napi = tweepy.API(auth)\n\n\ndef get_stuff(nombre=user):\n    stuff = tweepy.Cursor(api.user_timeline, screen_name = user, include_rts = True)\n    return stuff\n\ndef get_tweets(stuff, n):\n    for status in stuff.items(n):\n        print(status.created_at, status.author.screen_name, status.text)\n\nn = int(input('Cuantos tweets desea obtener: '))\n        stuff = get_stuff()\n        get_tweets(stuff, n)",
        "question_id": 38545
    },
    {
        "intent": "transformar fechasen palabras a fechas numerica",
        "rewritten_intent": "¿Cómo transformar una fecha `date` en palabras a fecha en números?",
        "snippet": "def mesANumero(date):\n    m = {\n        'enero': ‘01’,\n        'febrero': ‘02’,\n        'marzo': ‘03’,\n        'abril': ‘04’,\n        'mayo': ‘05’,\n        'junio': ‘06’,\n        'julio': ‘07’,\n        'agosto': ‘08’,\n        'septiembre': ‘09’,\n        'octubre': ‘10’,\n        'noviembre': ‘11’,\n        'diciembre': ‘12’\n        }\n\n    fecha = date.split(‘-‘)\n    dia =  fecha[0]\n    mes =  fecha[1]\n    anio = fecha[2]\n\n    try:\n        out = str(m[mes.lower()])\n        print dia + ‘-‘ +  out + ‘-‘ + anio\n    except:\n        raise ValueError('No es un mes')\n",
        "question_id": 49642
    },
    {
        "intent": "Abrir y cerrar un plot dentro de un while",
        "rewritten_intent": "¿Cómo abrir y cerrar un plot dentro de un while?",
        "snippet": "while (True):\n    plt.figure()\n    plt.plot()\n    plt.show(block=False)\n    plt.close()\n    time.sleep(0.1) ",
        "question_id": 8295
    },
    {
        "intent": "Abrir y cerrar un plot dentro de un while",
        "rewritten_intent": "¿Cómo abrir y cerrar un plot dentro de un while?",
        "snippet": "while True: \n    plt.figure()\n    plt.plot()\n    plt.show(block = False) \n    sleep().\n    plt.close()  \n    sleep() ",
        "question_id": 8295
    },
    {
        "intent": "¿Como crear un subproceso en Python?",
        "rewritten_intent": "¿Cómo crar un subproceso `proc`?",
        "snippet": "subprocess.Popenproc')",
        "question_id": 2611
    },
    {
        "intent": "Como descargar un archivo subido mediante un formulario usando FileField",
        "rewritten_intent": "¿Cómo descargar un archivo `file` subido mediante un formulario?",
        "snippet": "#models.py\nclass MyModel(models.Model):\n    file = models.FileField(upload_to='subcarpeta/')\n#settings.py\nMEDIA_ROOT = '<your_path>/media/'\nMEDIA_URL = '/media/'\n#urls.py\nif settings.DEBUG is True:\n    urlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)\n#template\n<a href=\"{{ my_model.file.url }}>download</a>",
        "question_id": 9580
    },
    {
        "intent": "Crear una matriz de matrices en python",
        "rewritten_intent": "¿Cómo crear una matriz `array` de `n`x`m` matrices?",
        "snippet": "array =[]\nfor count in range(n):\n   row=[]\n   for count in range(m):\n     m = matriz()     \n     row.append(m)\n   array.append(row)",
        "question_id": 71600
    },
    {
        "intent": "Añadir elementos a un conjunto conjunto, python",
        "rewritten_intent": "¿Cómo crear un conjunto `dic` que relacione los elementos de dos conjuntos `a` y `b` en el orden en que se agregaron?",
        "snippet": "a = [input(\"Ingrese un numero: \") for _ in range(2)]\n\nb = [input(\"Ingrese un numero: \") for _ in range(2)]\n\nprint(list(zip(a, b)))",
        "question_id": 36557
    },
    {
        "intent": "kivy: cambiar color de un label",
        "rewritten_intent": "¿Cómo cambiar el color de un label `label` en kivy?",
        "snippet": "label:\n            id: label1\n            color: 1,0,1,1",
        "question_id": 63508
    },
    {
        "intent": "Algoritmo de backtracking con condicional Python",
        "rewritten_intent": "¿Cómo generar permutaciones de una lista `list` permitiendo repetir elementos y sin repetirlos?",
        "snippet": "sin_repeticion = [x for x in combinations(list, 2)]\ncon_repeticion = [x for x in combinations_with_replacement(list, 2)]",
        "question_id": 37964
    },
    {
        "intent": "Algoritmo de backtracking con condicional Python",
        "rewritten_intent": "¿Cómo generar permutaciones de una lista `list` permitiendo repetir elementos y sin repetirlos?",
        "snippet": "#Con repetición\nprint [ (x,y) for x in mi_lista for y in mi_lista ]\n#Sin repetición\nprint [ (x,y) for x in mi_lista for y in mi_lista if x!=y]",
        "question_id": 37964
    },
    {
        "intent": "¿Cómo crear un lista con valores de coordenadas?",
        "rewritten_intent": "¿Cómo crear una lista `list` de tuplas con los valores `Lon` y `Lat` de un diccionario `dic`?",
        "snippet": "list = [] \nfor id,mensaje in dic.items():\n    list.append([mensaje['Lon'],mensaje['Lat']])",
        "question_id": 54164
    },
    {
        "intent": "¿Cómo crear un lista con valores de coordenadas?",
        "rewritten_intent": "¿Cómo crear una lista `list` de tuplas con los valores `Lon` y `Lat` de un diccionario `dic`?",
        "snippet": "list = [[v['Lon'],v['Lat']] for k, v in dic.items()]",
        "question_id": 54164
    },
    {
        "intent": "En Tkinter/Python 2.x ¿Cómo mover una imagen dentro de un canvas con el puntero del ratón?",
        "rewritten_intent": "¿Cómo crear una imagen `img` que se pueda mover con el puntero del ratón en Tkinter?",
        "snippet": "posicion = {\"x\": 0, \"y\": 0, \"img\": None}\n\ndef imgPress(event):\n    posicion[\"item\"] = canvas.find_closest(event.x, event.y)[0]\n    posicion[\"x\"] = event.x\n    posicion[\"y\"] = event.y\n\ndef imgRelease(event):\n    posicion[\"item\"] = None\n    posicion[\"x\"] = 0\n    posicion[\"y\"] = 0\n\ndef imgMotion(event):\n    incremento_x = event.x - posicion[\"x\"]\n    incremento_y = event.y - posicion[\"y\"]\n    canvas.move(posicion[\"item\"], incremento_x, incremento_y)\n    posicion[\"x\"] = event.x\n    posicion[\"y\"] = event.y\n\nroot = tk.Tk()\ncanvas = tk.Canvas(width=400, height=400)\ncanvas.pack(fill=\"both\", expand=True)\n\ncanvas.tag_bind(\"img\", \"<ButtonPress-1>\", imgPress)\ncanvas.tag_bind(\"img\", \"<ButtonRelease-1>\", imgRelease)\ncanvas.tag_bind(\"img\", \"<B1-Motion>\", imgMotion)\n\npic = tkFileDialog.askopenfilename()\nimg = ImageTk.PhotoImage(file=pic)\ncanvas.create_image(200, 200, anchor=tk.CENTER, image=img, tags=\"img\")\n\nroot.mainloop()\n",
        "question_id": 37285
    },
    {
        "intent": "Python: Obtener una lista a partir de otra y un índice",
        "rewritten_intent": "¿Cómo crear una función `indextoentry` que devuelva una lista al pasarle una lista `lista` y un ìndice `index`?",
        "snippet": "def indextoentry(lista,index):\n    return [lista[index]]",
        "question_id": 36164
    },
    {
        "intent": "Python: Obtener una lista a partir de otra y un índice",
        "rewritten_intent": "¿Cómo crear una función `indextoentry` que devuelva una lista al pasarle una lista `lista` y un ìndice `index`?",
        "snippet": "def indextoentry(lista,index):\n    listresult = []\n    listresult.append(lista[index])\n    return(listresult)",
        "question_id": 36164
    },
    {
        "intent": "¿Cómo mover archivos por fechas a sus respectivas carpetas en Python?",
        "rewritten_intent": "¿Cómo crear carpetas en la dirección `dir` para separar archivos cuyos nombres `nombre` son fechas en días julianos?",
        "snippet": "def esFecha( nombre ):\n  if ( len(nombre)<7 ):\n    return False\n  if ( not nombre[0:7].isdigit() ):\n    return False\n  dia = int( nombre[4:7] )\n  return dia>=1 and dia<=366\n\ndef moverFichero( nombre, dirBase ):\n  directorio = nombre[0:7]\n  destino = join( dirBase, directorio)\n  if ( not exists(destino) ):\n    makedirs(destino)\n  origen = join( dirBase, nombre )\n  move ( origen, destino )\n\ndirBase = dir\nficheros = [ f for f in listdir(dirBase) if isfile(join(dirBase,f)) ]\nfor fich in ficheros:\n  if ( esFecha( fich ) ):\n    moverFichero( fich, dirBase )",
        "question_id": 1736
    },
    {
        "intent": "¿Leer cadena de varias lineas ingresada en consola de PYTHON?",
        "rewritten_intent": "¿Cómo leer una cadena de varias líneas ingresada por consola y almacenar cada línea como un elemento de una lista `lista`?",
        "snippet": "lista = []\nwhile True:\n    inputs = input()\n    if inputs:\n        lista.append(inputs)\n    else:\n        break\nprint(lista)",
        "question_id": 59300
    },
    {
        "intent": "¿Cómo lograr borrar ciertos archivos de varios folders en Python?",
        "rewritten_intent": "¿Cómo borrar todos los archivos .txt dentro de las subcarpetas ubicadas en la ruta `rut`?",
        "snippet": "directory = rut\nos.chdir(directory)\nfor filename in glob.glob('**/*.txt', recursive=True):\n    os.unlink(filename)",
        "question_id": 2056
    },
    {
        "intent": "Iterar una lista en Django",
        "rewritten_intent": "¿Cómo sumar el campo `precio` de todos los elementos del modelo `Precompra` en Django?",
        "snippet": "totaldos =  Precompra.objects.aggregate(Sum(precio)).values()[0]",
        "question_id": 62733
    },
    {
        "intent": "Usar proxy en Python 3",
        "rewritten_intent": "¿Cómo usar una dirección proxy `proxy` con una url `url`?",
        "snippet": "proxy = request.ProxyHandler(proxies)\nopener = request.build_opener(proxy)\nrequest.install_opener(opener)\nresponse=request.urlopen(url)",
        "question_id": 59326
    },
    {
        "intent": "Convertir en mayúsculas el texto de un models.CharField() en Django Python",
        "rewritten_intent": "¿Cómo convertir en mayúsculas el texto `text` ingresado en un Charfield en Django?",
        "snippet": "class UpperField(forms.CharField):\n\n    def to_python(self, value):\n        return value.upper()\n\n\nclass TuModeloForm(forms.ModelForm):\n    text = UpperField()",
        "question_id": 24649
    },
    {
        "intent": "Convertir en mayúsculas el texto de un models.CharField() en Django Python",
        "rewritten_intent": "¿Cómo convertir en mayúsculas el texto `text` ingresado en un Charfield en Django?",
        "snippet": "class TuModelo(models.Model):\n    text = models.CharField(max_length=9, null=True)\n    \n    def save(self, *args, **kwargs):\n        self.text = (self.text).uppercase()\n        return super(TuModelo, self).save(*args, **kwargs)",
        "question_id": 24649
    },
    {
        "intent": "Como implementar un fichero conf usando Python",
        "rewritten_intent": "¿Cómo implementar un fichero conf?",
        "snippet": "config = ConfigParser.ConfigParser()\nconfig.read(conf)",
        "question_id": 3995
    },
    {
        "intent": "¿Cómo obtener la profundidad de color en bits de una imagen?",
        "rewritten_intent": "¿Cómo obtener la profundidad de color en bits de una imagen `filename`?",
        "snippet": "def get_tiff_depth(filename):\n    bits_per_sample=1\n    samples_per_pixel=1\n    photometric_interpretation = None\n    with open(filename, 'rb') as f:\n        byte_order = f.read(2)\n        if byte_order == 'II':\n            prefix = '<'\n        elif byte_order == 'MM':\n            prefix = '>'\n        else:\n            raise ValueError('El fichero no parece ser un TIFF')\n        (magic_number, offset) = struct.unpack(prefix + 'hI', f.read(6))\n        if magic_number != 42:\n            raise ValueError('El fichero no parece ser un TIFF')\n        f.seek(offset)\n        num_entries, = struct.unpack(prefix+'h', f.read(2))\n        for i in range(num_entries):\n            tag = f.read(12)\n            (id_tag, type_tag, num_values, value) = struct.unpack(prefix+'hhii', tag)\n            if id_tag == 258:\n                bits_per_sample = value\n            if id_tag == 262:\n                photometric_interpretation = value\n            elif id_tag == 277:\n                samples_per_pixel = value\n    if photometric_interpretation == 2: # rgb:\n        return 24\n    else:\n        return bits_per_sample * samples_per_pix\n",
        "question_id": 515
    },
    {
        "intent": "¿Cómo obtener la profundidad de color en bits de una imagen?",
        "rewritten_intent": "¿Cómo obtener la profundidad de color en bits de una imagen `filename`?",
        "snippet": "image = PythonMagick.Image(filename)\nprint image.depth()",
        "question_id": 515
    },
    {
        "intent": "Anidar objetos tablas relacionadas Django API REST Framework",
        "rewritten_intent": "¿Cómo anidar objetos tablas relacionadas con profundidad `n` en el serializer `BrandSerializer` en Django API REST Framework?",
        "snippet": "class BrandSerializer(serializers.ModelSerializer):\n    class Meta:\n        depth = n",
        "question_id": 11073
    },
    {
        "intent": "Cómo hallar la diferencia tiempo datetime.now()",
        "rewritten_intent": "¿Cómo calcular la diferencia entre una hora `ingreso` en UTC y este momento?",
        "snippet": "now = datetime.utcnow() \ndiferencia = now - ingreso",
        "question_id": 19685
    },
    {
        "intent": "Cómo hallar la diferencia tiempo datetime.now()",
        "rewritten_intent": "¿Cómo calcular la diferencia entre una hora `ingreso` en UTC y este momento?",
        "snippet": "now = datetime.utcnow()\ndiferencia = now.replace(tzinfo=None) - ingreso.replace(tzinfo=None)",
        "question_id": 19685
    },
    {
        "intent": "¿Cómo encontrar las palabras de longitud menor o mayor que la media aritmetica de una cadena?",
        "rewritten_intent": "¿Cómo encontrar las palabras de longitud menor o mayor que la media aritmetica de una cadena `S`?",
        "snippet": "media = stats.mean([len(palabra) for palabra in S.split()])\nmayores = [palabra for palabra in S.split() if len(palabra) >= media]\nmenores = [palabra for palabra in S.split() if len(palabra) < media]\nprint('las palabras menores a la media: ', menores)\nprint('las palabras mayores o iguales a la media: ', mayores)",
        "question_id": 2256
    },
    {
        "intent": "¿Cómo encontrar las palabras de longitud menor o mayor que la media aritmetica de una cadena?",
        "rewritten_intent": "¿Cómo encontrar las palabras de longitud menor o mayor que la media aritmetica de una cadena `S`?",
        "snippet": "ls, ts = zip(*sorted([(len(x), x) for x in S.split()]))\n\navlen = sum(ls) / len(ls)  \n\nbpoint = bisect.bisect_right(ls, avlen)  \nprint('mayores:', *ts[bpoint:])\nprint('menores:', *ts[:bpoint])",
        "question_id": 2256
    },
    {
        "intent": "Distancia entre punto y segmento",
        "rewritten_intent": "¿Cómo calcular la distancia entre un punto `P` y el segmento acotado por los puntos `A` y `B`?",
        "snippet": "def distancia(A, B, P):\n    if all(A==P) or all(B==P):\n        return 0\n\n    elif np.arccos(np.dot((P-A)/norm(P-A), (B-A)/norm(B-A))) > np.pi/2:\n        return norm(P-A)\n\n    elif np.arccos(np.dot((P-B)/norm(P-B), (A-B)/norm(A-B))) > np.pi/2:\n        return norm(P-B)\n\n    return norm(np.cross(B-A, A-P))/norm(B-A)",
        "question_id": 62209
    },
    {
        "intent": "Encontrar celdas adyacentes en una matriz",
        "rewritten_intent": "¿Cómo encontrar las celdas adyacentes a la celda en la fila `f` y la columna `c` en una matriz `life` llena de #?",
        "snippet": "def cant_adyacentes(life, f, c):\n    fs = life[f-1]\n    fi = life[(f+1)%len(life)]\n    i=(c+1)%len(life[0])\n    return (fs[c-1], fs[c], fs[i], life[f][c-1], life[f][i], fi[c-1], fi[c], fi[i]).count('#')\n\ndef pruebas_cant_adyacentes():\n    assert cant_adyacentes((['.']), 0, 0) == 0\n    assert cant_adyacentes((['..', '..']), 0, 0) == 0\n    assert cant_adyacentes((['..', '..']), 0, 1) == 0\n    assert cant_adyacentes((['##', '..']), 0, 0) == 2\n    assert cant_adyacentes((['##', '..']), 0, 1) == 2\n    assert cant_adyacentes((['#.', '.#']), 0, 0) == 4\n    assert cant_adyacentes((['##', '##']), 0, 0) == 8\n    assert cant_adyacentes((['.#.', '#.#', '.#.']), 1, 1) == 4\n    assert cant_adyacentes((['.#.', '..#', '.#.']), 1, 1) == 3\n\npruebas_cant_adyacentes()",
        "question_id": 62798
    },
    {
        "intent": "¿Cómo puedo conectarme a un PLC vía Modbus usando Python?",
        "rewritten_intent": "¿Cómo puedo conectarme a un PLC vía Modbus con la ip `ip`?",
        "snippet": "client = ModbusTcpClient(ip)\nclient.write_coil(1, True)\nresult = client.read_coils(1,1)\nprint result.bits[0]\nclient.close()",
        "question_id": 35679
    },
    {
        "intent": "¿Como conectarme con SQLALCHEMY a una basededatos?",
        "rewritten_intent": "¿Como conectarme con SQLALCHEMY a una basededatos `dbname` con usuario `user`, contraseña `password`, host `host` y ?",
        "snippet": "engine = create_engine('mysql://'+user+':'+password+'@+str(host)+'/'++dbname+'?charset=utf8&use_unicode=0', pool_recycle=port)\n\nconnection = engine.connect()",
        "question_id": 34346
    },
    {
        "intent": "¿Como conectarme con SQLALCHEMY a una basededatos?",
        "rewritten_intent": "¿Como conectarme con SQLALCHEMY a una basededatos `dbname` con usuario `user`, contraseña `password`, host `host` y ?",
        "snippet": "conn = pymysql.connect(host=host, user=user, passwd=password, db=dbname, charset = 'utf8mb4')",
        "question_id": 34346
    },
    {
        "intent": "¿Cómo imprimo sólo el máximo valor en un ciclo for?",
        "rewritten_intent": "¿Cómo calcular el máximo común divisor entre dos números `a` y `b`?",
        "snippet": "if a>b:\n    for i in range(1,a+1):\n        if a % i == 0.:   \n            if b !=0:     \n                if b % i == 0.:  \n                    print 'Maximo comun divisor para ', a, ' y ', b, ' es:'\n                    print i\nif b == 0:  \n    print 'Maximo comun divisor para ', a, ' y ', b, ' es: ', a\n\nif b>a:\n    for i in range(1,b+1):\n        if b % i == 0.:\n            if a !=0:\n                if a % i == 0.:\n                    print 'Maximo comun divisor para ', b, ' y ', a, ' son:'\n                    print i\nif a == 0:\n    print 'Maximo comun divisor para ', b, ' y ', a, ' es: ', b",
        "question_id": 26959
    },
    {
        "intent": "¿Cómo imprimo sólo el máximo valor en un ciclo for?",
        "rewritten_intent": "¿Cómo calcular el máximo común divisor entre dos números `a` y `b`?",
        "snippet": "max_divisor = 1\n\nif a>b:\n    for i in range(1,a+1):\n        if a % i == 0.:   \n            if b !=0:     \n                if b % i == 0.:  \n                    if i > max_divisor:\n                        max_divisor = i\n\nif b == 0:  \n    print 'Maximo comun divisor para ', a, ' y ', b, ' es: ', a\n\nif b>a:\n    for i in range(1,b+1):\n        if b % i == 0.:\n            if a !=0:\n                if a % i == 0.:\n                    if i > max_divisor:\n                        max_divisor = i\n\nif a == 0:\n    print 'Maximo comun divisor para ', b, ' y ', a, ' es: ', b\n\nprint 'Maximo comun divisor para ', a, ' y ', b, ' es:'\nprint max_divisor",
        "question_id": 26959
    },
    {
        "intent": "¿Cómo imprimo sólo el máximo valor en un ciclo for?",
        "rewritten_intent": "¿Cómo calcular el máximo común divisor entre dos números `a` y `b`?",
        "snippet": "def mcd(a,b):\n    return next((i for i in range(min(a,b),0,-1) if a%i==0 and b%i==0), 0)",
        "question_id": 26959
    },
    {
        "intent": "¿Cómo capturar salida de terminal con Python?",
        "rewritten_intent": "¿Cómo capturar la salida del terminal después de ejecutar un comando `command`?",
        "snippet": "process = subprocess.Popen(command, stdout=subprocess.PIPE, stderr=None, shell=True)\n\noutput = process.communicate()\n\nprint(output[0])",
        "question_id": 44385
    },
    {
        "intent": "Cambiar index bucle python",
        "rewritten_intent": "¿Cómo cambiar el índice en medio de un ciclo sobre la lista `lista`?",
        "snippet": "def getIndx(lista):\n    try:\n        index = int(input(‘Introduce el nuevo indice, entre 0 y {0} o otra si desea continuar el ciclo: ‘.format(len(lista)-1)))\n        if index in range(0, len(lista)):\n            return index\n    except:\n        return -1\n\nk = 0\nwhile k < len(lista):\n    v = lista[k]\n    print('Indice:', k, 'Valor:', lista[k])\n    k+=1\n\n    index = getIndx(lista)\n\n    if index >= 0:\n        k = index",
        "question_id": 53595
    },
    {
        "intent": "Modificar el valor de una variable",
        "rewritten_intent": "¿Cómo crear una variable global `puntos` dentro de una función `func`?",
        "snippet": "def func():\n    global puntos",
        "question_id": 30088
    },
    {
        "intent": "Cambiar un valor string a un entero",
        "rewritten_intent": "¿Cómo convertir un string `S` a un entero?",
        "snippet": "int(S)",
        "question_id": 28562
    },
    {
        "intent": "Cambiar un valor string a un entero",
        "rewritten_intent": "¿Cómo convertir un string `S` a un entero?",
        "snippet": "int(S)",
        "question_id": 28562
    },
    {
        "intent": "Renombrar fichero python",
        "rewritten_intent": "¿Cómo renombrar un archivo con nombre `old` a `new`?",
        "snippet": "os.rename(old, new)",
        "question_id": 17560
    },
    {
        "intent": "Detectar coincidencias en multiples archivos con Python",
        "rewritten_intent": "¿Cómo buscar todos los archivos con extensión `.ext` en la ruta `ruta` y buscar las coincidencias entre ellos?",
        "snippet": "path = ruta\nextension = *.ext\n\ndef comparar_linea(file1, file2):\n    data1 = [line.strip() for line in file1.readlines()]\n    data2 = [line.strip() for line in file2.readlines()]\n    same = set(data1).intersection(data2)\n    return same\n\ndef buscarCoincidencias(path, extension):\n    with open('some_output_file.txt', 'w') as file_out:\n        os.chdir(path)\n        files = glob.glob(extension)\n        for i in range(len(files)):\n            for j in range(i+1, len(files)):\n                with open(files[i]) as file1:\n                    with open(files[j], 'r') as file2:\n                        same = comparar_linea(file1, file2)\n                        file_out.write(files[i] + \"-\"+ files[j] + \": \"+str(same)+\"\\n\")\n\n\nbuscarCoincidencias(path, extension)",
        "question_id": 41536
    },
    {
        "intent": "Detectar coincidencias en multiples archivos con Python",
        "rewritten_intent": "¿Cómo buscar todos los archivos con extensión `.ext` en la ruta `ruta` y buscar las coincidencias entre ellos?",
        "snippet": "os.chdir(ruta)\n\nopen_files = (open(file, 'r') for file in glob.glob(*.ext))\n\nsame = set.intersection(*map(set, open_files))\nsame.discard('\\n')\n\nfor f in open_files:\n    f.close()\n\nwith open('some_output_file.txt', 'w') as file_out:\nfor line in same:\n    file_out.write(line)",
        "question_id": 41536
    },
    {
        "intent": "Detectar coincidencias en multiples archivos con Python",
        "rewritten_intent": "¿Cómo buscar todos los archivos con extensión `.ext` en la ruta `ruta` y buscar las coincidencias entre ellos?",
        "snippet": "def filtrarCoincidencias(ruta,extension):\n    files=[ x for x in os.listdir(ruta) if x.endswith(extension)]\n    coincidencias=[]\n\n    for i,f1 in enumerate(files):\n        for j,f2 in enumerate(files):\n            if(j>i):\n                if(filecmp.cmp(ruta+f1,ruta+f2)):\n                    coincidencias.append((f1,f2))\n    return coincidencias\n\n\nfor tupla in filtrarCoincidencias(ruta,.ext):\n    print(tupla)",
        "question_id": 41536
    },
    {
        "intent": "Mostrar ordenados alfabéticamente los objetos en el admin de Django",
        "rewritten_intent": "¿Cómo ordenar alfabéticamente por el campo `nombre` las instancias de una clase `Clase` en el admin de Django?",
        "snippet": "class Clase(models.Model):\n    nombre = models.CharField()\n\n    def __unicode__(self): \n        return self.nombre\n\n    class Meta:\n        ordering = ['nombre']",
        "question_id": 340
    },
    {
        "intent": "¿Como generar un response de un POST, con Django REST Framework Bulk?",
        "rewritten_intent": "¿Cómo personalizar la respuesta de una petición POST a la vista `ClassView` a Django Rest Framework?",
        "snippet": "class ClassView(generics.CreateAPIView):\n\n    queryset = class.objects.all()\n    serializer_class = classSerializer\n\n    def create(self, request, *args, **kwargs):\n        serializer = self.get_serializer(data=request.data)\n\n        self.perform_create(serializer)\n        response = {}\n        response['success'] = True\n        response['message'] = \"Registro guardado exitosamente\"\n        response['status'] = status.HTTP_201_CREATED\n        request.data.get('name')}, status=status.HTTP_201_CREATED)\n        return Response(response)",
        "question_id": 56670
    },
    {
        "intent": "¿Como generar un response de un POST, con Django REST Framework Bulk?",
        "rewritten_intent": "¿Cómo personalizar la respuesta de una petición POST a la vista `ClassView` a Django Rest Framework?",
        "snippet": "@api_view(['GET', 'POST'])\ndef ClassView(request):\n    if request.method == 'POST' and request.status == status.HTTP_201_CREATED:\n        return Response({\"mensaje\": \"Empleado creado con éxito\", \"data\": request.data})\n    return Response({\"message\": \"Algún mensaje en GET\"})",
        "question_id": 56670
    },
    {
        "intent": "¿Como generar un response de un POST, con Django REST Framework Bulk?",
        "rewritten_intent": "¿Cómo personalizar la respuesta de una petición POST a la vista `ClassView` a Django Rest Framework?",
        "snippet": "class ClassView(ListBulkCreateAPIView):\n    queryset = class.objects.all()\n    serializer_class = classSerializer\n\n    def create(self, request):\n        result = super(createEmployee, self).create(request)\n        return Result({'success': True, 'message': 'Creado correctamente'})",
        "question_id": 56670
    },
    {
        "intent": "Python - Convertir float en string",
        "rewritten_intent": "¿Cómo sustituir los valores de una columna `x` en una matriz `tabla`?",
        "snippet": "a=tabla.tolist()\nfor x in a[:]:\n        x[0]=nombres[a.index(x)]",
        "question_id": 62022
    },
    {
        "intent": "Cómo obtengo una cadena específica en un string usando expresiones regulares de Python",
        "rewritten_intent": "¿Cómo obtener la palabra después de `word` en una cadena `S` usando expresiones regulares?",
        "snippet": "match = re.search(r'.*?word-(\\w+).*', S)\n\nif match:\n    print match.group(1)",
        "question_id": 16458
    },
    {
        "intent": "Programar función de matrices y vectores con numpy (spyder)",
        "rewritten_intent": "¿Cómo sumar los valores del vector `x` a todas las columnas de la matriz `M`?",
        "snippet": "def suma_a_cada_columna(M, x):\n    return (M.transpose() + x).transpose()",
        "question_id": 40594
    },
    {
        "intent": "Python/Tkinter ¿Cómo capturar correctamente los clics del ratón en menú contextual?",
        "rewritten_intent": "¿Cómo capturar el elemento con la etiqueta `CURRENT` en Tkinter?",
        "snippet": "def popup(event):\n    global current_item\n    try:\n        current_item = canvas.find_withtag(CURRENT)[0]\n        menu.post(event.x_root, event.y_root)\n    except IndexError:\n        current_item = None",
        "question_id": 40452
    },
    {
        "intent": "Potenciar utilizando sólo multiplicación en Python",
        "rewritten_intent": "¿Cómo elevar un número x a la potencia y usando multiplicación?",
        "snippet": "def potenciaRecursiva(x, y):\n    if y == 0:\n        return 1\n\n    elif y >= 1:\n        return x * potenciaRecursiva(x, y - 1)",
        "question_id": 53694
    },
    {
        "intent": "Potenciar utilizando sólo multiplicación en Python",
        "rewritten_intent": "¿Cómo elevar un número x a la potencia y usando multiplicación?",
        "snippet": "def potencia(x, y):\n    result = 1\n    while y > 0:\n        if y % 2 == 1:\n            result = (result * x) % MOD\n        y = y / 2\n        x = (x * x) % MOD\n    return result",
        "question_id": 53694
    },
    {
        "intent": "Obtener valores en un rango de fecha dadas",
        "rewritten_intent": "¿Cómo filtrar un Queryset `listuser` por el campo `day` en un rango de fechas `fecha_inicial` y `fecha_final`?",
        "snippet": "listuser.filter(\n    day__range=(fecha_inicial, fecha_final))",
        "question_id": 11038
    },
    {
        "intent": "¿Cómo hacer el efecto de texto que se escribe palabra a palabra en Python?",
        "rewritten_intent": "¿Cómo imprimir los elementos de una cadena `S` con un tiempo de espera `t` entre ellos?",
        "snippet": "def mecanografiar(S):\n\n lista = S.split()\n\n for palabra in lista:\n    sys.stdout.write(palabra + \" \")\n    sys.stdout.flush()\n    time.sleep(t)",
        "question_id": 48514
    },
    {
        "intent": "¿Cómo hacer el efecto de texto que se escribe palabra a palabra en Python?",
        "rewritten_intent": "¿Cómo imprimir los elementos de una cadena `S` con un tiempo de espera `t` entre ellos?",
        "snippet": "def mecanografiar(S):\n    for palabras in S.split():\n        sleep(t)\n        print(palabras, end=' ', flush=True)",
        "question_id": 48514
    },
    {
        "intent": "¿Como saber cuántas veces tiene un texto una palabra específica?",
        "rewritten_intent": "¿Cómo calcular cuántas veces un texto `S` tiene una palabra específica `word`?",
        "snippet": "def awesome_count (S):\n    wordcount = dict((x,0) for x in S)\n    for w in re.findall(r\"\\w+\", s):\n        if word in wordcount:\n            wordcount[word] += 1\n    return wordcount[word]",
        "question_id": 67987
    },
    {
        "intent": "Como crear un programa que multiplique matrices?",
        "rewritten_intent": "¿Cómo multiplicar la matriz `A` y la matriz `B`?",
        "snippet": "def multiplicarMatriz(A, B):\n    return [[sum(x * B[i][col] for i,x in enumerate(fila)) for col in range(len(B[0]))] for fila in A]",
        "question_id": 61810
    },
    {
        "intent": "Login APIs Google automático",
        "rewritten_intent": "¿Cómo acceder a una sesión de mi cuenta de google?",
        "snippet": "class SesionGoogle():\n    def __init__(self, email, contraseña):\n        self.sesion = requests.session()\n\n        url_login = \"https://accounts.google.com/ServiceLogin\"\n        url_aut = \"https://accounts.google.com/ServiceLoginAuth\"\n\n        login_html = self.sesion.get(url_login)\n        soup_login = BeautifulSoup(login_html.content, 'html.parser').find('form').find_all('input')\n        datos = {u['name']:u['value'] for u in soup_login if u.has_attr('value')}\n        datos['Email'] = email\n        datos['Passwd'] = contraseña\n        self.sesion.post(url_aut, data = datos)\n\n    def get(self, URL):\n        return self.sesion.get(URL).text",
        "question_id": 37098
    },
    {
        "intent": "Obtener y gráficar triangulo de Sierpinski",
        "rewritten_intent": "¿Cómo graficar un triángulo de Sierpinski de `n` etapas?",
        "snippet": "def get_triangle(P):\n    m = P * 0.5\n    n = P * 0.5 + np.array([0.5, 0])\n    k = P * 0.5 + np.array([0.25, np.sqrt(3)/4])\n    return np.array([m,n,k])\n\n# triangulo unitario inicial\ntriangle = np.array([[0, 0],\n              [1, 0],\n              [0.5, np.sqrt(3)/2]])\n\netapa = 5\nfor e in range(etapa):\n    triangle = get_triangle(triangle)\n\nfig1 = plt.figure()\nax1 = fig1.add_subplot(111, aspect='equal')\nfor t in triangle.reshape(3**etapa,3,2):\n    ax1.add_patch(mpatches.Polygon(t, fc=\"y\"))\n\nplt.show()",
        "question_id": 4649
    },
    {
        "intent": "Utilizar input() dentro de un ciclo for (Python)",
        "rewritten_intent": "¿Cómo crear una matriz `matriz` en la que el usuario defina el número de filas `fil`, columnas `colum` y sus valores desde terminal?",
        "snippet": "colum=int(input('Cantidad de columnas: '))\nfil=int(input('Cantidad de filas: '))\nmatriz=[[str(input('[{},{}]-esimo termino: '.format(i, j))) for i in range(colum)] for j in range(fil)]",
        "question_id": 59136
    },
    {
        "intent": "Copiar un worksheet de un archivo de excel a otro",
        "rewritten_intent": "¿Cómo copiar la información de una hoja `hoja1` de un archivo `wP` a una hoja `hoja2` en un archvo `wB` y guardarlo en un archivo `file`?",
        "snippet": "wPs = wP.get_sheet_by_name(hoja1)\nwBs = wB.get_sheet_by_name(hoja2)\n\nfor rrow in wPs.iter_rows():\n    for cell in rrow:\n        wBs[cell.coordinate] = cell.value\n\nwB.save(file)",
        "question_id": 51974
    },
    {
        "intent": "¿Cómo puedo especificar el separador que tiene un fichero csv en python?",
        "rewritten_intent": "¿Cómo especificar el separador `,` como de un fichero csv `file` al abrirlo?",
        "snippet": "csv.reader(file, delimiter=',')",
        "question_id": 9776
    },
    {
        "intent": "Python 2.7. Cómo eliminar paréntesis cuadrados en archivo .txt de tipo numpy.ndarray",
        "rewritten_intent": "¿Cómo eliminar corchetes de un archivo `file` de tipo numpy.ndarray y guardar el resultado en un nuevo archvi `file2`?",
        "snippet": "inn = ''\nwith open(file, 'r') as file:\n    inn = file.read()\n\nwith open(file2, 'w') as file:\n    file.write(re.sub(r'[\\[\\]]', '', inn))",
        "question_id": 13251
    },
    {
        "intent": "¿Cómo remover una fila de un arreglo numpy en python?",
        "rewritten_intent": "¿Cómo remover una fila de un arreglo numpy `data_base`?",
        "snippet": "average_db = data_base.mean()\nstd_db = data_base.std()\nupper = average_db + std_db*.5\nlower = average_db - std_db*.5\nfor i in range(len(data_base)):\n    if data_base[i,1]>=upper or data_base[i,1]<=lower:\n        data_base = np.delete(data_base, i)",
        "question_id": 23323
    },
    {
        "intent": "Como almacenar datos importados a Python en una cache de memoria",
        "rewritten_intent": "¿Cómo darle persistencia a los datos importados de una base de datos en un DataFrame `df` para no tener que leerlos nuevamente desde la base de datos?",
        "snippet": "with pd.HDFStore('store.h5') as store:\n    store['df'] = df",
        "question_id": 44905
    },
    {
        "intent": "Como Exportar a PDF en Django?",
        "rewritten_intent": "¿Cómo exportar un pdf con cabecera y cuerpo como respuesta de una vista `PdfView`?",
        "snippet": "class PdfView(View):\n\n    def cabecera(self, pdf):\n\t# Definir cabecera\n\n    def cuerpo(self, pdf, y):\n        # Definir cuerpo\n\n    def get(self, request, *args, **kwargs):\n    \n        response=HttpResponse(content_type='application/pdf')\n  buffer=BytesIO()\n    \n  pdf=canvas.Canvas(buffer)\n  self.cabecera(pdf)\n  y=600\n  self.cuerpo(pdf, y)\n  pdf.showPage()\n  pdf.save()\n  pdf=buffer.getvalue()\n  buffer.close()\n  response.write(pdf)\n        return response\n",
        "question_id": 67477
    },
    {
        "intent": "Hacer aplicacion que se ejecute hasta una hora determinada en python",
        "rewritten_intent": "¿Cómo hacer que una función `func` se ejecute desde la hora de inicio `hora_inicio` la hora `hora_finalización`?",
        "snippet": "while True:\n    actual = datetime.now()\n    actual = time(actual.hour, actual.minute,actual.second)  # este objeto se puede comparar sin tener en cuenta la fecha\n    if actual > hora_inicio and actual < hora_finalizacion:\n        func()\n    else:\n        break",
        "question_id": 41041
    },
    {
        "intent": "Hacer aplicacion que se ejecute hasta una hora determinada en python",
        "rewritten_intent": "¿Cómo hacer que una función `func` se ejecute desde la hora de inicio `hora_inicio` la hora `hora_finalización`?",
        "snippet": "while datetime.time.now() > hora_inicio and datetime.time.now() < hora_finalizacion:\n    func()",
        "question_id": 41041
    },
    {
        "intent": "¿Cómo convertir un tipo String a Float o Int?",
        "rewritten_intent": "¿Cómo convertir un tipo `String` a `Float` o `Int`?",
        "snippet": "float(String) int(String)",
        "question_id": 49194
    },
    {
        "intent": "Posición de una dato en una lista (Python)",
        "rewritten_intent": "¿Cómo obtener la posición de un dato `x` en una lista `list`?",
        "snippet": "list.index(x)",
        "question_id": 63234
    },
    {
        "intent": "¿Cómo concatenar INT y STR con Python?",
        "rewritten_intent": "¿Cómo concatenar un `INT` y un `STR`?",
        "snippet": "INT+repr(STR)",
        "question_id": 57263
    },
    {
        "intent": "¿Cómo concatenar INT y STR con Python?",
        "rewritten_intent": "¿Cómo concatenar un `INT` y un `STR`?",
        "snippet": "STR + str(INT)",
        "question_id": 57263
    },
    {
        "intent": "¿Cómo concatenar INT y STR con Python?",
        "rewritten_intent": "¿Cómo concatenar un `INT` y un `STR`?",
        "snippet": "print ('{} {}'.format(STR,str(INT)))",
        "question_id": 57263
    },
    {
        "intent": "¿Cómo listar todos los archivos de una carpeta usando Python?",
        "rewritten_intent": "¿Cómo listar todos los archivos en una carpeta ubicada en el directorio `ruta`?",
        "snippet": "def ls(ruta = Path.cwd()):\n    return [arch.name for arch in Path(ruta).iterdir() if arch.is_file()]",
        "question_id": 24278
    },
    {
        "intent": "¿Cómo listar todos los archivos de una carpeta usando Python?",
        "rewritten_intent": "¿Cómo listar todos los archivos en una carpeta ubicada en el directorio `ruta`?",
        "snippet": "import os\ndef encontrar_arq(arq_buscado, ruta):\n    encontrado = False\n    for i in ruta:\n        if ruta == arq_buscando:\n            econtrado = True\n    return encontrado",
        "question_id": 24278
    },
    {
        "intent": "Eliminar elementos duplicados en una lista",
        "rewritten_intent": "¿Cómo eliminar duplicados en una lista `L`?",
        "snippet": "list(set(L))",
        "question_id": 87813
    },
    {
        "intent": "Eliminar elementos duplicados en una lista",
        "rewritten_intent": "¿Cómo eliminar duplicados en una lista `L`?",
        "snippet": "sorted(set(L))",
        "question_id": 87813
    },
    {
        "intent": "Eliminar elementos duplicados en una lista",
        "rewritten_intent": "¿Cómo eliminar duplicados en una lista `L`?",
        "snippet": "(k for (k,_) in groupby(L))",
        "question_id": 87813
    },
    {
        "intent": "¿Existe algo como typeof en Python?",
        "rewritten_intent": "¿Cómo obtener el tipo de una variable `x`?",
        "snippet": "type(x)",
        "question_id": 15622
    },
    {
        "intent": "¿Existe algo como typeof en Python?",
        "rewritten_intent": "¿Cómo obtener el tipo de una variable `x`?",
        "snippet": "isinstance(x, tipo_de_variable)",
        "question_id": 15622
    },
    {
        "intent": "¿Cómo puedo recorrer una lista en orden inverso?",
        "rewritten_intent": "¿Cómo puedo recorrer una `lista` en orden inverso?",
        "snippet": "for item in reversed(lista):",
        "question_id": 146070
    },
    {
        "intent": "¿Cómo puedo recorrer una lista en orden inverso?",
        "rewritten_intent": "¿Cómo puedo recorrer una `lista` en orden inverso?",
        "snippet": "for item in lista[::-1]:",
        "question_id": 146070
    },
    {
        "intent": "¿Cómo puedo recorrer una lista en orden inverso?",
        "rewritten_intent": "¿Cómo puedo recorrer una `lista` en orden inverso?",
        "snippet": "for item in xrange(len(lista)):\n    print lista[-item-1]",
        "question_id": 146070
    },
    {
        "intent": "sumar el valor de los elementos de la lista",
        "rewritten_intent": "¿Cómo sumar todos los elementos de una `lista`?",
        "snippet": "sum(lista)",
        "question_id": 201210
    },
    {
        "intent": "sumar el valor de los elementos de la lista",
        "rewritten_intent": "¿Cómo sumar todos los elementos de una `lista`?",
        "snippet": "sum(lista)",
        "question_id": 201210
    },
    {
        "intent": "sumar el valor de los elementos de la lista",
        "rewritten_intent": "¿Cómo sumar todos los elementos de una `lista`?",
        "snippet": "nume = 0\nfor m in lista:\n       nume += m",
        "question_id": 201210
    },
    {
        "intent": "Crear una lista de numeros aleatorios en python",
        "rewritten_intent": "¿Cómo crear una lista `L` con `n` números aleatorios?",
        "snippet": "def listaAleatorios(n):\n      L = [0]  * n\n      for i in range(n):\n          L[i] = random.randint(0, 1000)\n      return L",
        "question_id": 124063
    },
    {
        "intent": "Crear una lista de numeros aleatorios en python",
        "rewritten_intent": "¿Cómo crear una lista `L` con `n` números aleatorios?",
        "snippet": "def listaAleatorios(n):\n    L = []\n    for i in range(n):\n        L.insert(i, random.randrange(0, 1000, 2))\n    return L",
        "question_id": 124063
    },
    {
        "intent": "Crear una lista de numeros aleatorios en python",
        "rewritten_intent": "¿Cómo crear una lista `L` con `n` números aleatorios?",
        "snippet": " = [] \ncontador_rondas = 0 .\n\nnumero_random = randint(1,30) \n\nwhile contador_rondas < n:\n    numero_random = randint(1,30) \n    if numero_random in L: \n        pass\n    else:\n        L.append(numero_random) \n        contador_rondas = contador_rondas + 1",
        "question_id": 124063
    },
    {
        "intent": "¿Cómo me conecto a una Base de Datos MySQL con Python?",
        "rewritten_intent": "¿Cómo me conecto a una Base de Datos MySQL?",
        "snippet": "db = MySQLdb.connect(host=,    \n                     user=,         \n                     passwd=,  \n                     db=)",
        "question_id": 568
    },
    {
        "intent": "¿Cómo me conecto a una Base de Datos MySQL con Python?",
        "rewritten_intent": "¿Cómo me conecto a una Base de Datos MySQL?",
        "snippet": "db = MySQLdb.connect(passwd=,db=)",
        "question_id": 568
    },
    {
        "intent": "¿Cómo verificar que un archivo exista en Python?",
        "rewritten_intent": "¿Cómo verificar que un archivo `f` exista?",
        "snippet": "os.path.isfile(f)",
        "question_id": 512
    },
    {
        "intent": "¿Cómo verificar que un archivo exista en Python?",
        "rewritten_intent": "¿Cómo verificar que un archivo `f` exista?",
        "snippet": "if (os.path.exists(f)):",
        "question_id": 512
    },
    {
        "intent": "¿Cómo verificar que un archivo exista en Python?",
        "rewritten_intent": "¿Cómo verificar que un archivo `f` exista?",
        "snippet": "f = Path(f)\nf.exists()",
        "question_id": 512
    },
    {
        "intent": "Redondear decimal hacia arriba en Python",
        "rewritten_intent": "¿Cómo redondear decimales hacia arriba de un número `num`?",
        "snippet": "math.ceil(num)",
        "question_id": 8510
    },
    {
        "intent": "Redondear decimal hacia arriba en Python",
        "rewritten_intent": "¿Cómo redondear decimales hacia arriba de un número `num`?",
        "snippet": "round(num)",
        "question_id": 8510
    },
    {
        "intent": "Remplazar valores de un data frame con otros (Python )",
        "rewritten_intent": "¿Cómo reemplazar el valor de la columna `col` en un data frame `df` con una tupla de datos `clave`:`valor`?",
        "snippet": "df.col = df.col.replace({clave: valor})",
        "question_id": 231231
    },
    {
        "intent": "Remplazar valores de un data frame con otros (Python )",
        "rewritten_intent": "¿Cómo reemplazar el valor de la columna `col` en un data frame `df` con una tupla de datos `clave`:`valor`?",
        "snippet": "df.loc[df[col] == clave, col] = valor",
        "question_id": 231231
    },
    {
        "intent": "Cómo importar módulos .py de subcarpetas a carpetas",
        "rewritten_intent": "¿Cómo importar un archivo `archivo` de una carpeta superior?",
        "snippet": "from carpeta import archivo",
        "question_id": 1087
    },
    {
        "intent": "Cómo importar módulos .py de subcarpetas a carpetas",
        "rewritten_intent": "¿Cómo importar un archivo `archivo` de una carpeta superior?",
        "snippet": "import ..archivo",
        "question_id": 1087
    },
    {
        "intent": "Programa para contar las vocales de una cadena",
        "rewritten_intent": "¿Cómo contar las vocales en una cadena `s`?",
        "snippet": "def contar_vocales(s):\n    voc = 0\n    for c in s:\n        if c in 'aeiouAEIOU':\n            voc = voc + 1\n    return voc",
        "question_id": 114782
    },
    {
        "intent": "Programa para contar las vocales de una cadena",
        "rewritten_intent": "¿Cómo contar las vocales en una cadena `s`?",
        "snippet": "def contar_vocales(s):\n    return sum(map(s.lower().count, 'aeiouáéíóúü'))",
        "question_id": 114782
    },
    {
        "intent": "Programa para contar las vocales de una cadena",
        "rewritten_intent": "¿Cómo contar las vocales en una cadena `s`?",
        "snippet": "def contar_vocales(s):\n    voc=0\n    for i in range(0,len(s)):\n        if s[i]=='a' or s[i]=='e'or s[i]=='i' or s[i]=='o' or \\\n        s[i]=='u' or s[i]=='A'or s[i]=='E' or s[i]=='I' or \\\n        s[i]=='O'or s[i]=='U':\n            voc=voc+1\n    return voc",
        "question_id": 114782
    },
    {
        "intent": "Como emular el ciclo do-while en python?",
        "rewritten_intent": "¿Cómo emular un ciclo do-while?",
        "snippet": "i = 1\nwhile True:\n    i = i + 1\n    if(condicion):\n        break",
        "question_id": 139701
    },
    {
        "intent": "Como emular el ciclo do-while en python?",
        "rewritten_intent": "¿Cómo emular un ciclo do-while?",
        "snippet": "i = 1\nrepetir_bucle = True\nwhile repetir_bucle:\n    i = i + 1\n    if condicion:\n       repetir_bucle = False",
        "question_id": 139701
    },
    {
        "intent": "Limitar dígitos en un número periódico en Python",
        "rewritten_intent": "¿Cómo limitar un número periódico `p` a `n` dígitos?",
        "snippet": "'{:.nf}'.format(p)",
        "question_id": 236945
    },
    {
        "intent": "Limitar dígitos en un número periódico en Python",
        "rewritten_intent": "¿Cómo limitar un número periódico `p` a `n` dígitos?",
        "snippet": "'{0:.nf}'.format(p)",
        "question_id": 236945
    },
    {
        "intent": "Limitar dígitos en un número periódico en Python",
        "rewritten_intent": "¿Cómo limitar un número periódico `p` a `n` dígitos?",
        "snippet": "'{0:.nf}'.format(p)",
        "question_id": 236945
    },
    {
        "intent": "Crear un contador dentro de una función en Python 3.6",
        "rewritten_intent": "¿Cómo crear un contador `numero` dentro de una función?",
        "snippet": "def contador():\n  numero = 0\n  while True:\n    numero += 1\n    yield numero",
        "question_id": 171626
    },
    {
        "intent": "Crear un contador dentro de una función en Python 3.6",
        "rewritten_intent": "¿Cómo crear un contador `numero` dentro de una función?",
        "snippet": "numero = 0\n\ndef contador():\n    global numero\n    numero=numero+1",
        "question_id": 171626
    },
    {
        "intent": "Como obtener el numero mayor de una lista?",
        "rewritten_intent": "¿Cómo obtener el número mayor en una lista `L` de `Strings`?",
        "snippet": "max(L, key=int)",
        "question_id": 201835
    },
    {
        "intent": "Como obtener el numero mayor de una lista?",
        "rewritten_intent": "¿Cómo obtener el número mayor en una lista `L` de `Strings`?",
        "snippet": "listadosNumero = [int(num) for num in L]\nprint (max(listadosNumero))",
        "question_id": 201835
    },
    {
        "intent": "¿Cómo buscar un caracter en string Python?",
        "rewritten_intent": "¿Cómo encontrar todas las posiciones de una letra en un `String`?",
        "snippet": "for i, l in enumerate(String):\n    if l.lower() == letra.lower():\n       print(l)",
        "question_id": 272517
    },
    {
        "intent": "¿Cómo buscar un caracter en string Python?",
        "rewritten_intent": "¿Cómo encontrar todas las posiciones de una letra en un `String`?",
        "snippet": "[idx for idx, letra in enumerate(String) if x==letra]",
        "question_id": 272517
    },
    {
        "intent": "Matriz MxN, llenar vector con valores de matriz.",
        "rewritten_intent": "¿Cómo crear una matriz `matriz` con `n` filas y `m` columnas?",
        "snippet": "matriz = []\n\nfor i in range(n):\n    matriz.append([])\n    for j in range(m):\n        matriz[i].append(random.randint(0, 100))",
        "question_id": 159996
    },
    {
        "intent": "Matriz MxN, llenar vector con valores de matriz.",
        "rewritten_intent": "¿Cómo crear una matriz `matriz` con `n` filas y `m` columnas?",
        "snippet": "matriz = np.random.randint(0, 100, size=(n, m))",
        "question_id": 159996
    },
    {
        "intent": "Matriz MxN, llenar vector con valores de matriz.",
        "rewritten_intent": "¿Cómo crear una matriz `matriz` con `n` filas y `m` columnas?",
        "snippet": "a=[]\nfor i in range(n):\n    a.append([])\n    for j in range(m):\n        a[i].append(random.randrange(100))\n",
        "question_id": 159996
    },
    {
        "intent": "¿ Cómo recorrer una lista con FOR?",
        "rewritten_intent": "¿Cómo recorrer una lista desde la posición `p` hasta la posición `n` usando un for loop?",
        "snippet": "for i in lista[p:n]:",
        "question_id": 119507
    },
    {
        "intent": "¿ Cómo recorrer una lista con FOR?",
        "rewritten_intent": "¿Cómo recorrer una lista desde la posición `p` hasta la posición `n` usando un for loop?",
        "snippet": "for i in lista[p:n]:",
        "question_id": 119507
    },
    {
        "intent": "¿Cómo puedo insertar delay en Python?",
        "rewritten_intent": "¿Cómo insertar un delay de `n` segundos?",
        "snippet": "time.sleep(n)",
        "question_id": 109040
    },
    {
        "intent": "¿Cómo extraer e imprimir contenido de listas en Python?",
        "rewritten_intent": "¿Cómo imprimir contenido de dos listas `lista1` y `lista2` uno debajo del otro?",
        "snippet": "for i in range(len(lista1)):\n    print(lista1[i], lista2[i])",
        "question_id": 96884
    },
    {
        "intent": "Agregar elemento nuevo a diccionario Python",
        "rewritten_intent": "¿Cómo agregar un nuevo elemento de una lista `L` a un diccionario en un ciclo for?",
        "snippet": "for j in range(len(L)): \n         diccionario[j] = L[j]",
        "question_id": 86605
    },
    {
        "intent": "Python. Extraer objeto al azar de una lista",
        "rewritten_intent": "¿Cómo seleccionar un elemento aleatorio de una lista `l`?",
        "snippet": "shuffle(l)\nsel = l[0]",
        "question_id": 14454
    },
    {
        "intent": "Python. Extraer objeto al azar de una lista",
        "rewritten_intent": "¿Cómo seleccionar un elemento aleatorio de una lista `l`?",
        "snippet": "sel = random.sample(l, 1)",
        "question_id": 14454
    },
    {
        "intent": "Python. Extraer objeto al azar de una lista",
        "rewritten_intent": "¿Cómo seleccionar un elemento aleatorio de una lista `l`?",
        "snippet": "random.sample(l, k = 1)",
        "question_id": 14454
    },
    {
        "intent": "¿Como calcular el MCM en python?",
        "rewritten_intent": "¿cómo calcular el mínimo común múltipo de dos números `num1` y `num2`?",
        "snippet": "num1 =int(input())\nnum2 =int(input())\n\nA = max(num1, num2)\nB = min(num1, num2)\n\nwhile B:\n    mcd = B\n    B = A % B\n    A = mcd\nmcm =  (num1 * num2) // mcd",
        "question_id": 38558
    },
    {
        "intent": "Como recorrer una cadena de caracteres en python, para verificar si el carácter anterior es igual al siguiente?",
        "rewritten_intent": "¿Cómo verificar si un caracter `c` es igual al siguiente en una cadena `S`?",
        "snippet": "for i, c in enumerate(S):\n  if i == 0:\n    pass\n  else:\n    if S[i-1] == S[i]:\n      print \"Caracter '%s' repetido en posiciones (%i,%i)\" % (c, i-1, i)",
        "question_id": 138207
    },
    {
        "intent": "Como recorrer una cadena de caracteres en python, para verificar si el carácter anterior es igual al siguiente?",
        "rewritten_intent": "¿Cómo verificar si un caracter `c` es igual al siguiente en una cadena `S`?",
        "snippet": "def letra_duplicada(S):\n    for c1, c2 in zip(S, S[1:]):\n        if c1 == c2:\n          return True\n    return False",
        "question_id": 138207
    },
    {
        "intent": "¿Como agrupar datos de un DataFrame por varias columnas a la vez?",
        "rewritten_intent": "¿Como agrupar datos de un DataFrame por las columnas `columna1`, `columna2` y `columna3` a la vez?",
        "snippet": "df.groupby((columna1, columna2,columna3))",
        "question_id": 111977
    },
    {
        "intent": "¿Cómo llamar a un método de una clase desde otra clase en Python?",
        "rewritten_intent": "¿Cómo llamar a un método `Ejemplo()` de una clase desde otra clase en Python?",
        "snippet": "instancia = Ejemplo()\ninstancia.metodo()",
        "question_id": 258690
    },
    {
        "intent": "¿Cómo llamar a un método de una clase desde otra clase en Python?",
        "rewritten_intent": "¿Cómo llamar a un método `Ejemplo()` de una clase desde otra clase en Python?",
        "snippet": "newClass = Ejemplo()\nval = Ejemplo.getVal()",
        "question_id": 258690
    },
    {
        "intent": "¿Cómo llamar a un método de una clase desde otra clase en Python?",
        "rewritten_intent": "¿Cómo llamar a un método `Ejemplo()` de una clase desde otra clase en Python?",
        "snippet": "class Ejemplo:\n    def ejemplo1():\n        print ('ejem1')\n\nclass Ejemplo2:\n\n    def ejemplo21():\n        return Ejemplo.ejem2()\n\n\nprint(Ejemplo2.ejemplow1())",
        "question_id": 258690
    },
    {
        "intent": "¿Se puede declarar una función dentro de otra función en python?",
        "rewritten_intent": "\"¿Cómo declarar una función `bar` dentro de otra función `foo`?\"",
        "snippet": "def foo():\n    def bar():\n        print('Hola soy bar.')",
        "question_id": 79755
    },
    {
        "intent": "Como agregar una imagen a un Notebook en Jupyter",
        "rewritten_intent": "¿Como agregar una imagen `imagen.png` a un Notebook en Jupyter?",
        "snippet": "<img src='imagen.png'>",
        "question_id": 77634
    },
    {
        "intent": "Como agregar una imagen a un Notebook en Jupyter",
        "rewritten_intent": "¿Como agregar una imagen `imagen.png` a un Notebook en Jupyter?",
        "snippet": "![Modelo_Proceso.png](attachment:imagen.png)",
        "question_id": 77634
    },
    {
        "intent": "¿Cuál es la mejor manera de encontrar el mayor elemento dentro de una lista de listas?",
        "rewritten_intent": "¿Cómo encontrar el mayor elemento en la posición `n` una lista de listas `l`?",
        "snippet": "max(l, key=itemgetter(n))[n]",
        "question_id": 46558
    },
    {
        "intent": "¿Cuál es la mejor manera de encontrar el mayor elemento dentro de una lista de listas?",
        "rewritten_intent": "¿Cómo encontrar el mayor elemento en la posición `n` una lista de listas `l`?",
        "snippet": "matriz = np.array(l)\nprint matriz[n::].max()",
        "question_id": 46558
    },
    {
        "intent": "¿Existe una manera simple de convertir una lista de tipo str a una de tipo int?",
        "rewritten_intent": "\"Cómo convertir una lista `list` de tipo `str` a una de tipo `int`\"",
        "snippet": "for i in range(len(list)):\n    list[i] = int(list[i])",
        "question_id": 213125
    },
    {
        "intent": "¿Cómo hallar el numero mas repetido de una lista?",
        "rewritten_intent": "¿Cómo hallar el numero mas repetido de una `lista`?",
        "snippet": "Counter(lista).most_common()[0][0])",
        "question_id": 151572
    },
    {
        "intent": "¿Cómo hallar el numero mas repetido de una lista?",
        "rewritten_intent": "¿Cómo hallar el numero mas repetido de una `lista`?",
        "snippet": "c = Counter(lista)\nprint(max(c, key=c.get))",
        "question_id": 151572
    },
    {
        "intent": "¿Cómo hallar el numero mas repetido de una lista?",
        "rewritten_intent": "¿Cómo hallar el numero mas repetido de una `lista`?",
        "snippet": "moda, count = stats.mode(np.array(a))",
        "question_id": 151572
    },
    {
        "intent": "¿Cómo obtener columna de una matriz?",
        "rewritten_intent": "¿Cómo obtener toda una columna `c` de una matriz `m`?",
        "snippet": "inputs = np.array(m)\nprint(inputs[:,c])",
        "question_id": 115010
    },
    {
        "intent": "¿Cómo obtener columna de una matriz?",
        "rewritten_intent": "¿Cómo obtener toda una columna `c` de una matriz `m`?",
        "snippet": "inputs_inv = list(zip(*m))\nprint(inputs_inv[c])",
        "question_id": 115010
    },
    {
        "intent": "¿Como llamar una aplicación externa a través de un comando en Python?",
        "rewritten_intent": "¿Cómo llamar una aplicación externa de windows a través de un comando?",
        "snippet": "call([aplicación])",
        "question_id": 2434
    },
    {
        "intent": "¿Como llamar una aplicación externa a través de un comando en Python?",
        "rewritten_intent": "¿Cómo llamar una aplicación externa de windows a través de un comando?",
        "snippet": "os.system('aplicación')",
        "question_id": 2434
    },
    {
        "intent": "Aumentar tamaño de grafica con matplotlib",
        "rewritten_intent": "¿Cómo aumentar el tamaño de la gráfica de salida de matplotlib?",
        "snippet": "plt.figure(figsize=(10,6))",
        "question_id": 240398
    },
    {
        "intent": "Guardar gráfica completa utilizando matplotlib en Python",
        "rewritten_intent": "¿Cómo guardar una gráfica completa usando matplotlib?",
        "snippet": "matplotlib.rcParams.update({'font.size': 21})\nax = plt.gca()\n\nax2 = ax.twinx()\nfor i in range(10):\n    ax.bar(i, np.random.randint(1000))\n\nplt.ylabel('Datos')\nplt.savefig(\"Ejemplo1.jpg\")",
        "question_id": 151744
    },
    {
        "intent": "Eliminar elemento de una lista en python",
        "rewritten_intent": "¿Cómo crear una función para eliminar un elemento `n` de una lista `L`?",
        "snippet": "def eliminarEnLista(L):\n    n=int(raw_input(\"Ingrese el numero que desea eliminar de la lista: \"))\n    try:\n        L.remove(n)\n        print(L)\n    except ValueError:\n        print('{} no se encuentra en la lista'.format(n))",
        "question_id": 206450
    },
    {
        "intent": "Eliminar elemento de una lista en python",
        "rewritten_intent": "¿Cómo crear una función para eliminar un elemento `n` de una lista `L`?",
        "snippet": "def eliminarEnLista(L):\n    posicion = input(\"¿Qué posición que desea eliminar de la lista: \" + \",\".join(una_lista) + \" ? \")\n    if(str(n).isdigit() and int(n) <= len(L)):\n        L.pop(int(n))\n        return \",\".join(L)\n    else:\n        return \"Algo anda mal\"\n",
        "question_id": 206450
    },
    {
        "intent": "Sumar los elementos de dos listas con listas",
        "rewritten_intent": "¿Cómo sumar elementos de dos listas `lista1` y `lista2` con longitudes diferentes?",
        "snippet": "mayor, menor = (lista1, lista2) if len(lista1) > len(lista2) else (lista2, lista1)\nlista3 = []\nfor i, _ in enumerate(mayor):\n    if i + 1 > len(menor):\n      lista3.append(mayor[i])\n    else:\n      lista3.append(mayor[i] + menor[i])",
        "question_id": 102988
    },
    {
        "intent": "Sumar los elementos de dos listas con listas",
        "rewritten_intent": "¿Cómo sumar elementos de dos listas `lista1` y `lista2` con longitudes diferentes?",
        "snippet": "lista3 = []\n\n    for i in range(len(lista1)):\n      lista3.append(lista1[i])\n\n    for i in range(len(lista2)):\n      lista3[i] = lista3[i] + lista2[i]",
        "question_id": 102988
    },
    {
        "intent": "Como imprimir los elementos de una lista que están dentro de una tupla. Python",
        "rewritten_intent": "¿Cómo imprimir en una sola línea los elementos de una lista que está dentro de una tupla `tupla`?",
        "snippet": "c='' \nfor x in tupla[1] : \n  c = c+''.join(x) \nprint c",
        "question_id": 21230
    },
    {
        "intent": "Como imprimir los elementos de una lista que están dentro de una tupla. Python",
        "rewritten_intent": "¿Cómo imprimir en una sola línea los elementos de una lista que está dentro de una tupla `tupla`?",
        "snippet": "salida = ''\nfor sub1 in tupla[1]:\n      for sub2 in sub1:\n            salida += sub2\nprint salida",
        "question_id": 21230
    },
    {
        "intent": "Como imprimir los elementos de una lista que están dentro de una tupla. Python",
        "rewritten_intent": "¿Cómo imprimir en una sola línea los elementos de una lista que está dentro de una tupla `tupla`?",
        "snippet": "salida = ''.join(''.join(letra) for letra in tupla[1])",
        "question_id": 21230
    },
    {
        "intent": "Cómo realizar una sumatoria sin utilizar ciclos (while, for)",
        "rewritten_intent": "¿Cómo realizar una sumatoria de una lista `L` sin utilizar ciclos?",
        "snippet": "resultado = sum(L)",
        "question_id": 148791
    },
    {
        "intent": "¿Como generar una matriz con una lista que contiene datos?",
        "rewritten_intent": "¿Cómo generar una matríz de `M`x`N` con una lista `L`?",
        "snippet": "np.array(L).reshape(M,N)",
        "question_id": 8239
    },
    {
        "intent": "¿Como generar una matriz con una lista que contiene datos?",
        "rewritten_intent": "¿Cómo generar una matríz de `M`x`N` con una lista `L`?",
        "snippet": "args = [iter(L)]*M\nmatriz = list(zip_longest(*args))",
        "question_id": 8239
    },
    {
        "intent": "Mostrar posición de elementos repetidos de una lista Python",
        "rewritten_intent": "¿Cómo mostrar la posición de los elementos repetidos en una lista `L`?",
        "snippet": "ux = defaultdict(list)\nfor index, item in enumerate(L):\n    aux[item].append(index)\nresult = {item: indexs for item, indexs in aux.items() if len(indexs) > 1}\nprint(result",
        "question_id": 83439
    },
    {
        "intent": "Mostrar posición de elementos repetidos de una lista Python",
        "rewritten_intent": "¿Cómo mostrar la posición de los elementos repetidos en una lista `L`?",
        "snippet": "counts_por_elem = Counter(L)\n\nindices_por_elem = defaultdict(list)\nindices = []   \n\nfor indice, elem in enumerate(L):\n  if counts_por_elem[elem] > 1:\n    indices.append(indice)  \n    indices_por_elem[elem].append(indice)\n",
        "question_id": 83439
    },
    {
        "intent": "Contar caracteres dentro de una cadena en Python",
        "rewritten_intent": "¿Cómo contar cuántas veces se repite un carácter en una cadena `S`?",
        "snippet": "Counter(S)",
        "question_id": 188925
    },
    {
        "intent": "¿Cómo puedo coger la primera letra de cada palabra en una cadena?",
        "rewritten_intent": "¿Cómo crear una cadena con la primera letra de cada palabra en una cadena `S`?",
        "snippet": "words = S.split(' ') \ncharacter = ''\n\nfor word in words:\n   character += word[0]",
        "question_id": 160722
    },
    {
        "intent": "¿Cómo puedo coger la primera letra de cada palabra en una cadena?",
        "rewritten_intent": "¿Cómo crear una cadena con la primera letra de cada palabra en una cadena `S`?",
        "snippet": "palabras = S.split()\nnueva_cadena = \"\"\nfor p in palabras:\n    nueva_cadena += p[0]",
        "question_id": 160722
    },
    {
        "intent": "Cambiar directorio en python",
        "rewritten_intent": "¿Cómo cambiar mi directorio de ejecución actual a un directorio nuevo ubicado en la ruta `ruta_absoluta`?",
        "snippet": "os.chdir('ruta_absoluta')",
        "question_id": 133561
    },
    {
        "intent": "Dividir lista en lista de listas",
        "rewritten_intent": "¿Cómo dividir una lista `L` en una lista de listas cada `n` datos?",
        "snippet": "lista_nueva = []\nfor i in range(0, len(L), n):\n    lista_nueva.append(L[i:i+n])\nprint(lista_nueva)",
        "question_id": 134908
    },
    {
        "intent": "Dividir lista en lista de listas",
        "rewritten_intent": "¿Cómo dividir una lista `L` en una lista de listas cada `n` datos?",
        "snippet": "nueva_lista = [L[i:i+n] for i in range(0, len(L), n)]",
        "question_id": 134908
    },
    {
        "intent": "comando para poder comparar entre un string y un integer en Python (como condición)",
        "rewritten_intent": "¿Cómo comparar si el usuario ingresa como input un `int` o un `str`?",
        "snippet": "n=raw_input('ingrese numero jugadores: ') if str==str(int): \nprint('escribe un numero, no una letra')",
        "question_id": 63139
    },
    {
        "intent": "comando para poder comparar entre un string y un integer en Python (como condición)",
        "rewritten_intent": "¿Cómo comparar si el usuario ingresa como input un `int` o un `str`?",
        "snippet": "while True:\nn=raw_input('ingrese numero jugadores: ') \n   try: \n     n=int(n)\n     return n\n\n   except ValueError:\n\n      print 'Escribe un numero, no una letra.'",
        "question_id": 63139
    },
    {
        "intent": "comando para poder comparar entre un string y un integer en Python (como condición)",
        "rewritten_intent": "¿Cómo comparar si el usuario ingresa como input un `int` o un `str`?",
        "snippet": "while True:\nn=raw_input(‘ingrese numero jugadores: ‘) \nif type(n) !=int:\n    raise TypeError, ‘Escriba un numero’",
        "question_id": 63139
    },
    {
        "intent": "¿Cómo saber cuántas mayúsculas, minúsculas y números tiene un string?",
        "rewritten_intent": "¿Cómo saber cuántas mayúsculas `M`, cuántas minúsculas `m` y cuántos números `n` tiene un string `S`?",
        "snippet": "M = len([c for c in S if c.isupper()])\nm = len([c for c in S if c.islower()])\nn = len([c for c in S if c.isdigit()])",
        "question_id": 52839
    },
    {
        "intent": "¿Cómo saber cuántas mayúsculas, minúsculas y números tiene un string?",
        "rewritten_intent": "¿Cómo saber cuántas mayúsculas `M`, cuántas minúsculas `m` y cuántos números `n` tiene un string `S`?",
        "snippet": "textoSoloMayusculas = re.sub('[^A-Z]', '', S)\n\ntextoSoloMinusculas = re.sub('[^a-z]', '', S)\n\ntextoSoloNumeros = re.sub('[^\\d]', '', S)\n\nM = len(textoSoloMayusculas)\n\nm = len(textoSoloMinusculas)\n\nn = len(textoSoloNumeros)",
        "question_id": 52839
    },
    {
        "intent": "convertir de binario a entero en python (SyntaxError: invalid token)",
        "rewritten_intent": "¿Cómo convertir un número binario `n` a entero?",
        "snippet": "print(int(n))",
        "question_id": 50423
    },
    {
        "intent": "Pasar los datos de una lista a una hoja de cálculo, mediante dos celdas de la hoja - Python",
        "rewritten_intent": "¿Cómo pasar los datos `key`, `val` de un diccionario `key` a una hoja de cálculo en el archivo `file`?",
        "snippet": "wb = Workbook()\nruta = file\n\nhoja = wb.active\nhoja.title = 'Fecha-Valor'\n\nfila = 1 #Fila donde empezamos\ncol_fecha = 1 #Columna donde guardamos las fechas\ncol_dato = 2 #Columna donde guardamos el dato asociados a cada fecha\n\nfor key, val in dic.items():\n    hoja.cell(column=col_fecha, row=fila, value=key)\n    hoja.cell(column=col_dato, row=fila, value=val)\nfila+=1\n\nwb.save(filename = ruta)",
        "question_id": 36060
    },
    {
        "intent": "Random sin repetición",
        "rewritten_intent": "¿Cómo escoger cuatro valores aleatorios `L1`, `L2`, `L3`, `L4` de una cadena `S` sin repetir?",
        "snippet": "L1, L2, L3, L4 = random.sample(S, 4)",
        "question_id": 39861
    },
    {
        "intent": "¿Cómo crear un diccionario con multiples valores dentro de otro diccionario en python?",
        "rewritten_intent": "¿Cómo crear un diccionario con `num_nodo` número de valores dentro de otro diccionario `grafo`?",
        "snippet": "def generarGrafo(num_nodos):   \n    grafo = {}\n\n    for i in range(num_nodos):\n        nodo = raw_input(' ID Nodo %d:' %(i+1))       \n        num_nodos_asociados = input('  Numero de nodos asociados a nodo  '%s':' %(nodo))\n        grafo[nodo] = {}\n\n        for j in range(int(num_nodos_asociados)):\n            nodo_asociado = raw_input('   ID nodo %d asociado:' %(j+1)) \n            peso_asociado = input(' Peso asociado (Arista(%s,%s) ): ' %(nodo, nodo_asociado) )\n            grafo[nodo][nodo_asociado] = peso_asociado\n    return grafo",
        "question_id": 26549
    },
    {
        "intent": "Volver a ejecutar una parte del codigo hasta que se cumpla",
        "rewritten_intent": "¿Cómo ejecutar una parte de un código hasta que una condición `cond` se cumpla?",
        "snippet": "while True:\n    if cond:\n        break",
        "question_id": 67977
    },
    {
        "intent": "Dos formularios en una sola vista Django - CreateView",
        "rewritten_intent": "¿Cómo pasar dos formularios `form1` y `form2` a una vista `View` en Django?",
        "snippet": "class View(MultiFormsView):\n    form_class = {\n        'dragon': UserProfileForm,\n        'unicornio': UserForm\n    }",
        "question_id": 22420
    },
    {
        "intent": "Ejecutar fragmento de código a una hora/fecha determinada en un script en ejecución",
        "rewritten_intent": "¿Cómo ejecutar un fragmento de código `funcion` cada día a una hora `hora` con un delay `delay` determinada en un script en ejecución?",
        "snippet": "class Temporizador(Thread):\n    def __init__(self, hora, funcion):\n        super(Temporizador, self).__init__()\n        self._estado = True\n        self.hora = hora\n        self.delay = delay\n        self.funcion = funcion\n\n    def stop(self):\n        self._estado = False\n\n    def run(self):\n        aux = datetime.strptime(self.hora, '%H:%M:%S')\n        hora = datetime.now()\n        hora = hora.replace(hour = aux.hour, minute=aux.minute, second=aux.second, microsecond = 0)\n        if hora <= datetime.now():\n            hora += timedelta(days=1)\n\n        while self._estado:\n            if hora <= datetime.now():\n                self.funcion()\n                hora += timedelta(days=1)\n            sleep(self.delay)",
        "question_id": 38195
    },
    {
        "intent": "Limpiar la consola tras cada ejecucion del while principal",
        "rewritten_intent": "¿Cómo limpiar la consola tras cada ejecución de un ciclo while?",
        "snippet": "While True:\n\tos.system('cls')",
        "question_id": 71551
    },
    {
        "intent": "Cómo leer un archivo de texto de una lista o array con Python",
        "rewritten_intent": "¿Cómo leer un archivo de texto `file` y generar una lista `arr` con cada una de sus líneas?",
        "snippet": "with open(file, 'r') as ins:\n    cont = ins.read()  \n    arr = eval(cont)",
        "question_id": 17679
    },
    {
        "intent": "Extraer datos de XML usando Python",
        "rewritten_intent": "¿Cómo extraer datos `commentinfo` de una url `url` que están en formato XML?",
        "snippet": "url = url\nuh = urllib.urlopen(url)\ndata = uh.read()\ncommentinfo = ET.fromstring(data)",
        "question_id": 3122
    },
    {
        "intent": "Extraer datos de XML usando Python",
        "rewritten_intent": "¿Cómo extraer datos `commentinfo` de una url `url` que están en formato XML?",
        "snippet": "url = url\nparsed_data = untangle.parse(url)\ncommentinfo = parsed_data.commentinfo.comments.comment",
        "question_id": 3122
    },
    {
        "intent": "¿Cómo ordernar una lista creada por el usuario?",
        "rewritten_intent": "¿Cómo ordenar una lista `list` de números dados por el usuario en consola?",
        "snippet": "list = []\ntext = input('Ingrese Numero ')\nlist = [int(i) for i in text.split(' ')]\nlist.sort()",
        "question_id": 30292
    },
    {
        "intent": "¿Cómo ordernar una lista creada por el usuario?",
        "rewritten_intent": "¿Cómo ordenar una lista `list` de números dados por el usuario en consola?",
        "snippet": "list = []  \nprint('Ingresa 3 Numeros')\nfor x in range(3):\n    ingresado = input('Ingrese:')  \n    list.append(ingresado)  \n\nlist.sort() ",
        "question_id": 30292
    },
    {
        "intent": "¿Cómo ordernar una lista creada por el usuario?",
        "rewritten_intent": "¿Cómo ordenar una lista `list` de números dados por el usuario en consola?",
        "snippet": "print('Ingresa numeros, 0 para terminar')\nlist = []\nnum = input()\nwhile num != 0:\n    list.append(num)\n    num = input()\n\nprint(\"%d numeros fueron escritos\") % len(list)\nprint(sorted(list))",
        "question_id": 30292
    },
    {
        "intent": "Añadir listas sobre una lista - Python 2.7",
        "rewritten_intent": "¿Cómo añadir listas `lista` con valores `val1` y `val2` ingresados por el usuario en otra lista `lista2`?",
        "snippet": "lista2 = []\nrespuesta = ''\nwhile respuesta.lower() != 'no':\n    lista = []\n    val1 = lista.append(raw_input('ingrese val1: '))\n    val2 = lista.append(raw_input('ingrese val2: ))\n    lista2.append(lista)\n    respuesta = raw_input('si desea ingresar datos de otro alumno ingrese Si, de lo contrario, ingrese No ')",
        "question_id": 43558
    },
    {
        "intent": "¿Como capturar teclado o combinacion de teclas en python3?",
        "rewritten_intent": "¿Cómo capturar el valor de una tecla cuando el usuario la presiona?",
        "snippet": "ch = screen.getch()",
        "question_id": 71086
    },
    {
        "intent": "¿Como capturar teclado o combinacion de teclas en python3?",
        "rewritten_intent": "¿Cómo capturar el valor de una tecla cuando el usuario la presiona?",
        "snippet": "def teclaPulsada(key): \n    print(\"Pulsada: \", key) \n    with Listener(on_press=teclaPulsada) as listener: \n        listener.join() ",
        "question_id": 71086
    },
    {
        "intent": "¿Cómo puedo ejecutar tareas asincrónicas en Python?",
        "rewritten_intent": "¿Cómo ejecutar un función `fun` de manera asincrónica?",
        "snippet": "with ThreadPoolExecutor() as e:\n        fs = {e.submit(fun)}\n        wait(fs)",
        "question_id": 68420
    },
    {
        "intent": "¿Como configurar widget Frame en Tkinter?",
        "rewritten_intent": "¿Cómo crear un Frame `mainframe` en Tkinter?",
        "snippet": "root=tk.Tk()\n\nmainframe = ttk.Frame(root)\nmainframe.grid()\nmainframe['padding'] = 5, 10",
        "question_id": 62981
    },
    {
        "intent": "Obtener el número mayor en python",
        "rewritten_intent": "¿Cómo encontrar el valor más alto de `n` valores ingresados por consola?",
        "snippet": "n_mayor = 0\nk = 1\nn = input(\"Escriba la cantidad de numeros que desea comparar: \")\nwhile k<=n:\n    n = float(input('Digitar numero: '))\n    if n>n_mayor:\n        n_mayor = n\n    else:\n        n_mayor = n_mayor\n    k = k+1\nprint 'El mayor numero es: ',n_mayor",
        "question_id": 5382
    },
    {
        "intent": "Graficar con Python, Pandas",
        "rewritten_intent": "¿Cómo crear un gráfico de barras con los datos de un Data Frame `df` agrupados por la columna `col`?",
        "snippet": "grp=df.groupby(col)\ngrp.size().plot(kind='bar')",
        "question_id": 21371
    },
    {
        "intent": "Como obtener los elementos de una lista por pares en python",
        "rewritten_intent": "¿Cómo crear una lista de tuplas de 2 valores a partir de una lista `lista`?",
        "snippet": "def troceo(lista):\n    return list(zip(*[iter(lista)]*2))",
        "question_id": 22582
    },
    {
        "intent": "Como obtener los elementos de una lista por pares en python",
        "rewritten_intent": "¿Cómo crear una lista de tuplas de 2 valores a partir de una lista `lista`?",
        "snippet": "zipped = zip(lista[0::n], lista[1::2]) ",
        "question_id": 22582
    },
    {
        "intent": "Encontrar la primera fila de en una matriz que contenga todos los elementos positivos y la suma de estos elementos",
        "rewritten_intent": "¿Cómo encontrar la primera fila en una matriz 'matriz' que contenga solo números positivos y reemplazar cada fila de la lista por la suma de estos números?",
        "snippet": "def suma_nasver(matriz):\n    resultado = []\n    suma = 0\n    for arreglo in matriz:\n \n        elementos_negativos = list(filter(lambda elem: elem < 0, arreglo))\n        if not elementos_negativos:\n            \n            suma = sum(arreglo)\n            break\n\n    if suma:\n  \n        [resultado.append([suma]) for _ in range(len(matriz))]\n    return resultado",
        "question_id": 2320
    },
    {
        "intent": "Encontrar la primera fila de en una matriz que contenga todos los elementos positivos y la suma de estos elementos",
        "rewritten_intent": "¿Cómo encontrar la primera fila en una matriz 'matriz' que contenga solo números positivos y reemplazar cada fila de la lista por la suma de estos números?",
        "snippet": "suma_positivos = 0\n\nfor fila in matriz:\n    \n    if all([numero > 0 for numero in fila]):\n            suma_positivos =  sum(fila)\n                   \n            break\n\nif suma_positivos:\n    matriz = [[suma_positivos for value in matriz] for row in matriz]",
        "question_id": 2320
    },
    {
        "intent": "Encontrar la primera fila de en una matriz que contenga todos los elementos positivos y la suma de estos elementos",
        "rewritten_intent": "¿Cómo encontrar la primera fila en una matriz 'matriz' que contenga solo números positivos y reemplazar cada fila de la lista por la suma de estos números?",
        "snippet": "sumallpos = sum(next((x for x in matriz if min(x) > 0), [0]))\nif sumallpos:\n    matriz = [[sumallpos for x in y] for y in matriz]\nelse:\n    print('No hay filas con todos elementos positivos.')",
        "question_id": 2320
    },
    {
        "intent": "Archivo de datos csv como array en Python",
        "rewritten_intent": "¿Cómo convertir un archivo `file` csv en un array `list`?",
        "snippet": "reader = csv.reader(open(file, 'rb'))\nfor row in (reader):\n    row.split(',')\n    file = [row[0],row[1],row[2],row[3]]",
        "question_id": 45217
    },
    {
        "intent": "¿Cómo puedo obtener la raíz digital de un número positivo usando Python?",
        "rewritten_intent": "¿Cómo obtener la raíz digital de un número `num`?",
        "snippet": "def raiz_digital(num):\n    suma = sum(int(digito) for digito in str(num))\n    if suma < 10:\n        return suma\n    else:\n        return raiz_digital(suma)",
        "question_id": 1651
    },
    {
        "intent": "¿Cómo puedo obtener la raíz digital de un número positivo usando Python?",
        "rewritten_intent": "¿Cómo obtener la raíz digital de un número `num`?",
        "snippet": "def getDigitalRoot(num):\n    return num if num == 0 else num % 9 or 9",
        "question_id": 1651
    },
    {
        "intent": "¿Cómo puedo obtener la raíz digital de un número positivo usando Python?",
        "rewritten_intent": "¿Cómo obtener la raíz digital de un número `num`?",
        "snippet": "def digital_root(num):\n    n = str(num)\n    while(len(n) > 1):\n        n = str(reduce(lambda x, y: x + y, map(int, n)))\n    return int(n)",
        "question_id": 1651
    },
    {
        "intent": "¿Cómo obtener el día del año desde un datetime?",
        "rewritten_intent": "¿Cómo obtener los dos últimos dígitos del año seguidos del día del año desde un datetime `date`?",
        "snippet": "print (date.strftime('%y%j'))",
        "question_id": 1139
    },
    {
        "intent": "Convertir minúsculas a mayúsculas no funciona bien con upper",
        "rewritten_intent": "¿Cómo convertir de minúsculas a mayúsculas un string `S`?",
        "snippet": "S.upper()",
        "question_id": 15727
    },
    {
        "intent": "División con decimales en python 2",
        "rewritten_intent": "¿Cómo dividir un número entero `num` por un número `num1` decimal?",
        "snippet": "resultado = numero / número1",
        "question_id": 47500
    },
    {
        "intent": "¿Qué módulo puedo utilizar para detectar y conectarme a las redes Wi-Fi alrededor, utilizando Python ? de preferencia una solución para OSX",
        "rewritten_intent": "¿Cómo conectarme a una red wifi `red` con contraseña `pass`?",
        "snippet": "\"wireless = Wireless()\nwireless.interface()\nwireless.connect(ssid=red, password=pass)",
        "question_id": 956
    },
    {
        "intent": "Crear objetos con nombres similares con un ciclo for en python",
        "rewritten_intent": "¿Cómo crear n objetos `obj` iguales?",
        "snippet": "for i in range(1,n):\n    exec(obj.format(i))",
        "question_id": 60867
    },
    {
        "intent": "Crear objetos con nombres similares con un ciclo for en python",
        "rewritten_intent": "¿Cómo crear n objetos `obj` iguales?",
        "snippet": "[obj] * n ",
        "question_id": 60867
    },
    {
        "intent": "Como guardo un diccionario para no perder su contenido?",
        "rewritten_intent": "¿Cómo crear un programa para guardar valores `key`, `val` en un diccionario `dic` en un archivo `file`?",
        "snippet": "def agregar(dic):\n    key = input(‘Palabra en español: ‘)\n    val = input(‘Palabra en ingles: ‘)\n    dic[key] = val\n\ndef cargar_datos():\n    try:\n        with open(file, ‘rb’) as f:\n            return pickle.load(f)\n    except (OSError, IOError) as e:\n        return dict()\n\ndef guardar_datos(dic):\n    with open(‘traducciones.dat’, ‘wb’) as f:\n        pickle.dump(dic, f)\n\n\ndef main():\n    dic = cargar_datos()\n    menu ='''\n    2. Añadir palabra.\n    3. Guardar y salir.\n    '''\n\n    while True:\n        print(menu)\n        decision = input(‘¿Que quieres hacer?: ‘)\n        elif decision == ‘1’:\n            agregar(dic)\n        elif decision == ‘2’:\n            guardar_datos(dic)\n            break\n        else:\n            print('Opción inválida, intentelo de nuevo.')\n\nif __name__ == '__main__':\n    main()",
        "question_id": 68734
    },
    {
        "intent": "Como puedo utilizar el comando (cd ..) en python",
        "rewritten_intent": "¿Cómo utilizar el comando cd en un script?",
        "snippet": "os.chdir('..')",
        "question_id": 18276
    },
    {
        "intent": "Como puedo utilizar el comando (cd ..) en python",
        "rewritten_intent": "¿Cómo utilizar el comando cd en un script?",
        "snippet": "os.system('cd ..') ",
        "question_id": 18276
    },
    {
        "intent": "\"While\": como puedo \"print\" los valores de while en horizontal separados por una \",\"?",
        "rewritten_intent": "¿Cómo imprimir `n` números `num` ingresados por consola en la misma linea?",
        "snippet": "num=int(input(\"Ingrese un numero:\"))\na=0\nwhile(a<n):\n    print(num, end=',')\n    a+=1\"",
        "question_id": 66226
    },
    {
        "intent": "\"While\": como puedo \"print\" los valores de while en horizontal separados por una \",\"?",
        "rewritten_intent": "¿Cómo imprimir `n` números `num` ingresados por consola en la misma linea?",
        "snippet": "num=int(input(‘Ingrese un numero:’))\na=0\nnumeros = ‘’ #String que contendra los numeros\nwhile(a<n):\n    numeros = numeros + str(num) + \",\" #agregamos al string el numeros y una coma\n    a+=1\n\nnumeros = numeros[:-1] \nprint numeros \n",
        "question_id": 66226
    },
    {
        "intent": "Trasponer una lista, pero no se copia línea por línea",
        "rewritten_intent": "¿Cómo trasponer una lista `aux`?",
        "snippet": "aux = [[fila[i] for fila in aux ] for i in range(len(aux[0]))]",
        "question_id": 56480
    },
    {
        "intent": "Trasponer una lista, pero no se copia línea por línea",
        "rewritten_intent": "¿Cómo trasponer una lista `aux`?",
        "snippet": "aux = np.transpose(aux)",
        "question_id": 56480
    },
    {
        "intent": "Trasponer una lista, pero no se copia línea por línea",
        "rewritten_intent": "¿Cómo trasponer una lista `aux`?",
        "snippet": "aux = [list(i) for i in zip(*aux)]",
        "question_id": 56480
    },
    {
        "intent": "Contar números primos ordenar ascendente y descentente en python",
        "rewritten_intent": "¿Cómo calcular la cantidad de números primos en una lista `lista` y ordenarla de manera ascendente y descendente?",
        "snippet": "def is_prime(n):\n    return n > 1 and all(n % i for i in range(2, n))\n\nprint(\"Cantidad de primos   : {0}\".format(sum(1 for n in lista if is_prime(n))))\nprint(\"Lista ordenada (asc) : {0}\".format(sorted(lista)))\nprint(\"Lista ordenada (desc): {0}\".format(sorted(lista,reverse=True)))",
        "question_id": 54616
    },
    {
        "intent": "¿Cómo crear un intervalo de fecha de inicio hasta una fecha final con python-dateutil?",
        "rewritten_intent": "¿Cómo crear un intervalo de fecha de inicio `desde` hasta una fecha final `hasta`?",
        "snippet": "def rango_fechas(desde, hasta):\n    rango = []\n    dias_totales = (hasta - desde).days\n    for days in range(dias_totales + 1): \n        fecha = desde + relativedelta(days=days)\n        rango.append(fecha)\n    return rango",
        "question_id": 7601
    },
    {
        "intent": "Buscar palabras dentro de otra",
        "rewritten_intent": "¿Cómo identificar si el texto `addr` introducido por consola es un dominio o una ip?",
        "snippet": "addr = raw_input('Introduce la ip o el nombre de dominio: ')\ndominios = ['gmail','hotmail']\nbandera = \n\nfor proveedor in dominios :\n    if (cadena.find(proveedor,0,len(cadena)) > 0):\n       bandera = True\n\nif(bandera):\n    print 'es un proveedor'\nelse:\n    print 'es un dominio'",
        "question_id": 51617
    },
    {
        "intent": "Buscar palabras dentro de otra",
        "rewritten_intent": "¿Cómo identificar si el texto `addr` introducido por consola es un dominio o una ip?",
        "snippet": "addr = raw_input('Introduce la ip o el nombre de dominio: ')\naddrs= ['.com', '.es']\nencontrado = False\n\nfor valor in addrs :\n    if addr.find(valor) > -1 :\n        encontrado = True\n\n\nif encontrado :\n    print 'es un dominio'\nelse:\n    print 'es una ip'",
        "question_id": 51617
    },
    {
        "intent": "Buscar palabras dentro de otra",
        "rewritten_intent": "¿Cómo identificar si el texto `addr` introducido por consola es un dominio o una ip?",
        "snippet": "addr=input ('Introduce la ip o el nombre de dominio: ')\n\ntry:\n    aux=int(addr)\n    print (addr, ': es una ip')\n\nexcept:\n   print (addr, ' es un dominio')",
        "question_id": 51617
    },
    {
        "intent": "Campos no obligatorios usando Django Form",
        "rewritten_intent": "¿Cómo especificar que un campo `field` de un Form en Django no es obligatorio?",
        "snippet": "def __init__(self, *args, **kwargs):\n    super(self.__class__, self).__init__(*args, **kwargs)\n    \n    self.fields[field].required = False  \n",
        "question_id": 30470
    },
    {
        "intent": "Crear y graficar arreglo de pendientes entre puntos",
        "rewritten_intent": "¿Cómo calcular la pendiente entre cada uno de los puntos en los arrays `x`, `y` y graficarlos?",
        "snippet": "pendiente = np.diff(y) / np.diff(x)\nplt.plot(pendiente, '-m')\nplt.show()\n",
        "question_id": 3070
    },
    {
        "intent": "Editar campos de formulario en Django para modificar el objeto input",
        "rewritten_intent": "¿Cómo hacer un campo `field` de un formulario `Form`requerido en Django?",
        "snippet": "class Form(forms.ModelForm):\n    def __init__(self, *args, **kwargs):\n        super(Form, self).__init__(*args, **kwargs)\n        self.fields[field].widget.attrs = {\n            'required': True\n        }",
        "question_id": 4201
    },
    {
        "intent": "¿Cómo eliminar datos de una lista de strings y solo dejar los datos que sean números?",
        "rewritten_intent": "¿Cómo eliminar todos los danos no numéricos de una lista `list`?",
        "snippet": "l2 = []\nfor elem in list:\n    try:\n        l2.append(float(elem))\n    except ValueError:\n        pass",
        "question_id": 8218
    },
    {
        "intent": "¿Cómo eliminar datos de una lista de strings y solo dejar los datos que sean números?",
        "rewritten_intent": "¿Cómo eliminar todos los danos no numéricos de una lista `list`?",
        "snippet": "with localcontext(ExtendedContext):\n    l2 = [ x for x in (Decimal(s) for s in list)\n                 if x.is_finite() ]",
        "question_id": 8218
    },
    {
        "intent": "¿Cómo sumar el resultado impreso con los otros en Python?",
        "rewritten_intent": "¿Cómo sumar los múltiplos de `n` desde 1 hasta `m`?",
        "snippet": "def multiplo():\n    numero = n\n    total = 0 \n\n    while numero <= m:\n        total = total + numero\n        numero = numero + n\n    print(total)",
        "question_id": 56815
    },
    {
        "intent": "¿Cómo sumar el resultado impreso con los otros en Python?",
        "rewritten_intent": "¿Cómo sumar los múltiplos de `n` desde 1 hasta `m`?",
        "snippet": "numero = 1\nwhile numero <= m:\n\n        total = n * numero\n        numero = numero + 1\n\n   print(total)",
        "question_id": 56815
    },
    {
        "intent": "¿Cómo sumar el resultado impreso con los otros en Python?",
        "rewritten_intent": "¿Cómo sumar los múltiplos de `n` desde 1 hasta `m`?",
        "snippet": "def multiplos_de_n():\n    total = 0\n    for i in range(1, m+1):\n        if (i % n) == 0:\n            print '%d es multiplo de n' % (i)\n            total += i\n\n    print 'El total de sumar los multiplos de n entre 1 y m es: %d' % (total)",
        "question_id": 56815
    },
    {
        "intent": "¿Cómo guardar el resultado de un comando externo ejecutado en Python?",
        "rewritten_intent": "¿Cómo guardar el resultado de un comando `command` externo?",
        "snippet": "resultado =subprocess.check_output(command, shell=True)",
        "question_id": 65586
    },
    {
        "intent": "Como leer una lista de 1000 elementos desde un archivo txt en python para despues ordenarla con Quicksort",
        "rewritten_intent": "¿Cómo leer elementos de un archivo de texto `file` y agregarlos a una lista `list`?",
        "snippet": "list = []\narch = open(file, 'r')\n\nfor linea in arch:\n    list.append(int(linea))\n\narch.close()",
        "question_id": 67166
    },
    {
        "intent": "Como leer una lista de 1000 elementos desde un archivo txt en python para despues ordenarla con Quicksort",
        "rewritten_intent": "¿Cómo leer elementos de un archivo de texto `file` y agregarlos a una lista `list`?",
        "snippet": "list=[]\n\narch = open(file, 'r')\n\nfor linea in arch:\n    list.append(linea.strip())\n\narch.close() ",
        "question_id": 67166
    },
    {
        "intent": "Como leer una lista de 1000 elementos desde un archivo txt en python para despues ordenarla con Quicksort",
        "rewritten_intent": "¿Cómo leer elementos de un archivo de texto `file` y agregarlos a una lista `list`?",
        "snippet": "list = []\nwith open(file) as procfile:\n    for line in procfile:\n        list.append(line.strip())\nreturn list",
        "question_id": 67166
    },
    {
        "intent": "Dado un texto y una letra indique cuantas palabras aparecen que contengan esa letra",
        "rewritten_intent": "¿Cómo calcular el número de palabras `num` que contengan la letra `ch` en un texto `S`?",
        "snippet": "num = 0\nfor palabra in S.split():\n    if ch in palabra:\n        num  += 1\nprint num",
        "question_id": 49118
    },
    {
        "intent": "Dado un texto y una letra indique cuantas palabras aparecen que contengan esa letra",
        "rewritten_intent": "¿Cómo calcular el número de palabras `num` que contengan la letra `ch` en un texto `S`?",
        "snippet": "num=0\ntextoLista=S.split()\n\nfor palabra in textoLista:\n    for caracter in palabra:\n        if ch == caracter:\n            contador=contador+1\n            break\nprint contador",
        "question_id": 49118
    },
    {
        "intent": "¿Cómo agregar los elementos de una lista de caracteres en una matriz de nxm",
        "rewritten_intent": "¿Cómo agregar los elementos de una cadena `S` a una matriz de `n`x`m`?",
        "snippet": "matrix = []\npos = 0\n\nfor i in range(n):\n    matrix.append([])\n    for j in range(m):\n        matrix[i].append(S[pos] if pos < len(S) else None)\n        pos += 1\n\nprint matrix",
        "question_id": 21173
    },
    {
        "intent": "¿Cómo agregar los elementos de una lista de caracteres en una matriz de nxm",
        "rewritten_intent": "¿Cómo agregar los elementos de una cadena `S` a una matriz de `n`x`m`?",
        "snippet": "matrix = []\naux=0\nfor i in range(n):\n    for j in range(n):\n        if aux<len(S):\n            matrix[i][j] = S[aux]  \n            aux+=1",
        "question_id": 21173
    },
    {
        "intent": "¿Cómo puedo multiplicar dos listas?",
        "rewritten_intent": "¿Cómo puedo multiplicar dos listas de `INT` `L1` y `L2` ?",
        "snippet": "L1 = [3,4,2,6]\nL2 = [98, 80,86,78]\n\nlista_multi = list(map(operator.mul, L1, L2))\"",
        "question_id": 96261
    },
    {
        "intent": "¿Cómo puedo multiplicar dos listas?",
        "rewritten_intent": "¿Cómo puedo multiplicar dos listas de `INT` `L1` y `L2` ?",
        "snippet": "np.multiply(L1,L2)",
        "question_id": 96261
    },
    {
        "intent": "¿Cómo puedo multiplicar dos listas?",
        "rewritten_intent": "¿Cómo puedo multiplicar dos listas de `INT` `L1` y `L2` ?",
        "snippet": "lista_multi = []\ni = 0 \nfor x in lista_creditos:\n        cr = L1[i]\n        ca = L2[i]\n        print cr, ca, cr * ca\n        lista_multi.append(cr*ca)\n        i = i + 1",
        "question_id": 96261
    },
    {
        "intent": "Obtener las posiciones del array donde encuentre un valor con numpy.where",
        "rewritten_intent": "¿Cómo obtener las posiciones del array `L` donde encuentre un valor `x`?",
        "snippet": "array = np.array(L)\nnp.where(array == x)",
        "question_id": 24577
    },
    {
        "intent": "Filtrar datos al cargar CSV usando Pandas",
        "rewritten_intent": "¿Cómo filtrar datos que contengan el valor `val`en la columna `col` al cargar un CSV en un dataframe `df1` usando Pandas?",
        "snippet": "df[df[col] == val]\"",
        "question_id": 96541
    },
    {
        "intent": "¿Como logearme automáticamente a una web y automatizar una descarga con Python?",
        "rewritten_intent": "¿Cómo loguearse en una página web `x` usando el usuario `user` y la contraseña `pass` y descargar un archivo ubicado en el link de acceso `link`?",
        "snippet": "browser = mechanize.Browser() \nbrowser.set_handle_robots(False)   \nbrowser.open(x)\n\nbrowser.select_form(name=\"login_form\") \nbrowser[\"username\"] = user browser[\"password\"] = pass\nresponse = browser.submit()\n\n\nbrowser.retrieve(link)[0]\"",
        "question_id": 3778
    },
    {
        "intent": "Crear un DataFrame a partir de otro filtarando columnas que contengan únicamente datos de un tipo",
        "rewritten_intent": "¿Cómo crear un dataframe `df1` a partir de otro dataframe `df` filtrando columnas que contengan únicamente datos de tipo ´type´?",
        "snippet": "df1 = df.select_dtypes(include=[np.type])",
        "question_id": 148266
    },
    {
        "intent": "Crear un DataFrame a partir de otro filtarando columnas que contengan únicamente datos de un tipo",
        "rewritten_intent": "¿Cómo crear un dataframe `df1` a partir de otro dataframe `df` filtrando columnas que contengan únicamente datos de tipo ´type´?",
        "snippet": "df1 = []\nfor col in df.columns:\n  if df[col].dtype == type:\n    df1.append(df[col])\"",
        "question_id": 148266
    },
    {
        "intent": "¿Cómo modifico una linea de un fichero en Python?",
        "rewritten_intent": "¿Cómo abrir un archivo `fichero.txt` en modo lectura y escritura?",
        "snippet": "with open(fichero, 'r') as archivo:\n    pass   \n\nwith open(fichero, 'w') as archivo:\n    pass",
        "question_id": 35491
    },
    {
        "intent": "¿Cómo modifico una linea de un fichero en Python?",
        "rewritten_intent": "¿Cómo abrir un archivo `fichero.txt` en modo lectura y escritura?",
        "snippet": "with open(fichero, 'r+') as archivo:",
        "question_id": 35491
    },
    {
        "intent": "Cambiar el nombre de un archivo con Python",
        "rewritten_intent": "¿Cómo cambiar el nombre de un archivo ubicado en la dirección `dir` a `file`?",
        "snippet": "os.rename(dir, file)",
        "question_id": 68258
    },
    {
        "intent": "Cambiar el nombre de un archivo con Python",
        "rewritten_intent": "¿Cómo cambiar el nombre de un archivo ubicado en la dirección `dir` a `file`?",
        "snippet": "os.rename(dir, file)",
        "question_id": 68258
    },
    {
        "intent": "Como invertir palabras individuales de un string con python?",
        "rewritten_intent": "¿Cómo inveritr las palabras individuales de un string `S`?",
        "snippet": "def invert(m):\n    return m.group(0)[::-1]\n\nresultado = pat.sub(invert, S)",
        "question_id": 194809
    },
    {
        "intent": "Como invertir palabras individuales de un string con python?",
        "rewritten_intent": "¿Cómo inveritr las palabras individuales de un string `S`?",
        "snippet": "[x[::-1] for x inS).split(' ')]",
        "question_id": 194809
    },
    {
        "intent": "Como invertir palabras individuales de un string con python?",
        "rewritten_intent": "¿Cómo inveritr las palabras individuales de un string `S`?",
        "snippet": "def reverse(S):\n    return ' '.join(list(map(lambda x: x[::-1], S.split())))",
        "question_id": 194809
    },
    {
        "intent": "Eliminar un fichero con todo su contenido en Python",
        "rewritten_intent": "¿Cómo eliminar una carpeta `dir` con varios archivos dentro?",
        "snippet": "shutil.rmtree(dir)",
        "question_id": 103768
    },
    {
        "intent": "¿Cómo realizar un 'Presione una tecla para continuar...' en Python 3.X?",
        "rewritten_intent": "¿Cómo generar en la terminal un 'Presione 'ESC' para continuar...'?",
        "snippet": "print('Presione 'Esc' para continuar...')\nkey = None\nwhile key != '\\x1b':\n    key = msvcrt.getch()",
        "question_id": 129724
    },
    {
        "intent": "¿Cómo puedo sustituir valores de una columna a otra de un DataFrame?",
        "rewritten_intent": "¿Cómo puedo sustituir valores `falta` si el valor es 0 y `sobra` si el valor es 1 '' en un dataframe `df`?",
        "snippet": "new_df = df.astype('str')\nnew_df[new_df == \"1\"] = 'Presente'\nnew_df[new_df == \"0\"] = 'Falta'",
        "question_id": 104440
    },
    {
        "intent": "¿Cómo puedo sustituir valores de una columna a otra de un DataFrame?",
        "rewritten_intent": "¿Cómo puedo sustituir valores `falta` si el valor es 0 y `sobra` si el valor es 1 '' en un dataframe `df`?",
        "snippet": "df.replace({1: 'presente', 0: 'falta'},  inplace = True)",
        "question_id": 104440
    },
    {
        "intent": "¿Cómo hacer una tabla de distribución de frecuencias con python?",
        "rewritten_intent": "¿Cómo hacer una tabla de distribución de frecuencias de los datos del archivo `file`?",
        "snippet": "filename = file\ndata = np.loadtxt(filename)\nhist, bin_edges = np.histogram(data, 10)\nplt.hist(data, bins=bin_edges)\nplt.show()",
        "question_id": 40830
    },
    {
        "intent": "¿Cómo hacer una tabla de distribución de frecuencias con python?",
        "rewritten_intent": "¿Cómo hacer una tabla de distribución de frecuencias de los datos del archivo `file`?",
        "snippet": "lista_variables = file.values.tolist()\n# Ordenación de los datos.\nlista_ordenada_variables = np.sort(lista_variables, axis=None)\nfrecuencias = pd.Series(lista_ordenada_variables).value_counts()\nprint (\"\\nVariable (X) - Frecuencias absolutas (f)\\n\" ,dicc(frecuencias))",
        "question_id": 40830
    },
    {
        "intent": "¿Cómo usar rutas relativas en python con una ruta base variable?",
        "rewritten_intent": "¿Cómo crear rutas relativas `rut` con una ruta base `base`?",
        "snippet": "Rutasol = os.path.join(rut, base)\nRutasol = os.path.abspath(Rutasol)",
        "question_id": 55025
    },
    {
        "intent": "¿Cómo usar rutas relativas en python con una ruta base variable?",
        "rewritten_intent": "¿Cómo crear rutas relativas `rut` con una ruta base `base`?",
        "snippet": "rutabase = Path(base)\n\nrutarel = Path(rut)\n\nrutasol = rutabase + rutarel",
        "question_id": 55025
    },
    {
        "intent": "Diccionario de listas, recorrer valores Python",
        "rewritten_intent": "¿Cómo recorrer los valores de un diccionario `dic` de listas?",
        "snippet": "for key in dic:\n   dic[key]",
        "question_id": 110548
    },
    {
        "intent": "Cómo determinar si todos los dígitos de un número entero son iguales",
        "rewritten_intent": "¿Cómo determinar si todos los dígitos de un número entero `num` son iguales?",
        "snippet": "def digitos_iguales(num):\n    return num == 0 or num % ((10**int(log10(abs(num))+1) - 1) // 9) == 0",
        "question_id": 33325
    },
    {
        "intent": "Cómo determinar si todos los dígitos de un número entero son iguales",
        "rewritten_intent": "¿Cómo determinar si todos los dígitos de un número entero `num` son iguales?",
        "snippet": "def digitos_iguales(num):\n    m, c = divmod(num, 10)\n    d = c\n\n    while m>0 and d == c:\n        m, d = divmod(m, 10)\n\n    return (d==c)",
        "question_id": 33325
    },
    {
        "intent": "Cómo determinar si todos los dígitos de un número entero son iguales",
        "rewritten_intent": "¿Cómo determinar si todos los dígitos de un número entero `num` son iguales?",
        "snippet": "ultimoDigito = num % 10\ntodosIguales = True\nwhile (n != 0) & (todosIguales):\n    digito = n % 10\n    n = n // 10\n    todosIguales = digito == ultimoDigito",
        "question_id": 33325
    },
    {
        "intent": "¿Como sumar los dígitos de 1 numero, y seguir sumando si esta suma aun tiene mas de 1 dígito?",
        "rewritten_intent": "¿Como sumar los dígitos de un numero `num`, y seguir sumando si esta suma aun tiene mas de 1 dígito?",
        "snippet": "def suma_de_digitos_iterativa(num): \n    while num > 9:\n        num = sum(int(d) for d in str(num))\n    return num",
        "question_id": 144004
    },
    {
        "intent": "¿Cómo manejar el evento de cerrar ventana en tkinter?",
        "rewritten_intent": "¿Cómo crear una ventana de confirmación al intentar cerrar una ventana en tkinter?",
        "snippet": "class MyDialog:\n    def __init__(self, parent):\n        self.top = tk.Toplevel(parent)\n        self.parent = parent\n        self.top.title(\"Salir\")\n\n        tk.Label(self.top, text=\"¿Está seguro?\").grid(row=0, column=0, columnspan=2)\n\n        self.button1 = tk.Button(self.top, text=\"Si, salir de la app.\", command=self.salir)\n        self.button2 = tk.Button(self.top, text=\"No, solo minimizar.\", command=self.minimizar)\n        self.button1.grid(row=1, column=0, padx=5, pady=5)\n        self.button2.grid(row=1, column=1, padx=5, pady=5)\n\n    def salir(self):\n        self.top.destroy()\n        self.parent.destroy()\n\n    def minimizar(self):\n        self.top.destroy()\n        self.parent.iconify()\n\n\nclass MyApp:\n    def __init__(self, parent):\n        self.parent = parent\n        self.parent.protocol(\"WM_DELETE_WINDOW\", self.on_closing)\n\n    def on_closing(self):\n        d = MyDialog(root)\n        self.parent.wait_window(d.top)\n\nif __name__ == \"__main__\":\n    root = tk.Tk()\n    app = MyApp(root)\n    root.mainloop()",
        "question_id": 104691
    },
    {
        "intent": "¿Cómo convertir cada línea de un archivo de texto en una lista utilizando python?",
        "rewritten_intent": "¿Cómo convertir cada línea de un archivo de texto `file` en una lista?",
        "snippet": "salida = []\nwith open(file, 'r') as f:\n    lineas = [linea.split() for linea in f]",
        "question_id": 69610
    },
    {
        "intent": "Comparar dos vectores elemento a elemento",
        "rewritten_intent": "¿Cómo comparar si cada valor del vector `a` es menor que el del vector `b`?",
        "snippet": "def elementos_a_menor_que_elementos_b(a, b):\n    if len(a) != len(b):\n        print('Las listas no tiene el mismo tamaño')\n        return False\n\n    for item_a, item_b in zip(a, b):\n        if item_a > item_b:\n            return False\n\n    return True",
        "question_id": 90333
    },
    {
        "intent": "Comparar dos vectores elemento a elemento",
        "rewritten_intent": "¿Cómo comparar si cada valor del vector `a` es menor que el del vector `b`?",
        "snippet": "c = np.all(np.array(a) < np.array(b))",
        "question_id": 90333
    },
    {
        "intent": "Comparar dos vectores elemento a elemento",
        "rewritten_intent": "¿Cómo comparar si cada valor del vector `a` es menor que el del vector `b`?",
        "snippet": "np.all(np.less(a,b))",
        "question_id": 90333
    },
    {
        "intent": "¿Como generar un archivo csv a partir de una lista?",
        "rewritten_intent": "¿Como generar un archivo csv a partir de una lista `list`?",
        "snippet": "datos = np.asarray(list)\nnp.savetxt('output.csv',   \n           datos.T,        \n           fmt='%d',       \n           delimiter=',')",
        "question_id": 11698
    },
    {
        "intent": "¿Como generar un archivo csv a partir de una lista?",
        "rewritten_intent": "¿Como generar un archivo csv a partir de una lista `list`?",
        "snippet": "with open('output.csv', 'wb') as f:\n  writer = csv.writer(f)\n  writer.writerows(zip(*list))",
        "question_id": 11698
    },
    {
        "intent": "¿Cómo sumar vectores representados por tuplas en Python?",
        "rewritten_intent": "¿Cómo sumar dos vectores `a` y `b` representados por tuplas?",
        "snippet": "tuple(sum(x) for x in zip(a, b))",
        "question_id": 314
    },
    {
        "intent": "¿Cómo sumar vectores representados por tuplas en Python?",
        "rewritten_intent": "¿Cómo sumar dos vectores `a` y `b` representados por tuplas?",
        "snippet": "lambda a,b: tuple(starmap(add, izip(a, b)))",
        "question_id": 314
    },
    {
        "intent": "Cómo llamar a la funcion de un script desde otro script en python?",
        "rewritten_intent": "¿Cómo llamar a la funcion `get` de un script `model_get ` desde otro script?",
        "snippet": "from .model_get import get",
        "question_id": 183228
    },
    {
        "intent": "¿Cómo mostrar un número con ceros a la izquierda?",
        "rewritten_intent": "¿Cómo mostrar un número `num` con `n` ceros a la izquierda?",
        "snippet": "num.zfill(n)",
        "question_id": 60617
    },
    {
        "intent": "¿Cómo hago que funcione mi pirámide de asteriscos en python?",
        "rewritten_intent": "¿Cómo crear una pirámide de asteriscos con número de líneas `lineas`?",
        "snippet": "def Piramide(lineas):    \n    for numero_linea in range(lineas): \n        espacios = lineas - numero_linea - 1 \n        asteriscos = 1 + numero_linea * 2\n        print \" \" * espacios + \"*\" * asteriscos\n    return ",
        "question_id": 4799
    },
    {
        "intent": "Pasar el valor de una variable desde una funcion a otra funcion en Python",
        "rewritten_intent": "¿Cómo pasar el valor de una variable `SueldoBruto` de la clase `Trabajador` de una función `calcular_sueldo` a la función `imprimir_sueldo`?",
        "snippet": "class Trabajador: \n    \n    SueldoBruto = 0\n    \n\ndef calcular_sueldo():\n        Trabajadores.SueldoBruto = 10000\n\ndef imprimir_sueldo():\n        print(Trabajador.SueldoBruto)",
        "question_id": 84618
    },
    {
        "intent": "Extraccion datos excel para crear lista Python",
        "rewritten_intent": "¿Cómo extraer datos de la hoja `sheet` en un archivo `file` de excel y crear un diccionario de listas `dic`?",
        "snippet": "wb = openpyxl.load_workbook(file)\nws = wb.get_sheet_by_name(sheet)\n\ndic = collections.defaultdict(list)\nfor row in ws.iter_rows():\n    dic[row[0].value].append(row[1].value)",
        "question_id": 113620
    },
    {
        "intent": "Extraccion datos excel para crear lista Python",
        "rewritten_intent": "¿Cómo extraer datos de la hoja `sheet` en un archivo `file` de excel y crear un diccionario de listas `dic`?",
        "snippet": "wb2 = xlrd.open_workbook(file)\nsheet = wb2.sheet_by_index(sheet)\n\ndir_cantidad = len(sheet.col_values(0)) - 1\n\nLista = {}\n\nfor i in range(0,dir_cantidad):\n    \n    connection = sheet.cell(i, 0).value\n    \n\n    if connection in Lista:\n        conn = Lista.get(connection)\n        conn.append(sheet.cell(i, 1).value)\n        \n        Lista[connection] = conn\n    else:\n        Lista[connection] = [sheet.cell(i, 1).value]\n",
        "question_id": 113620
    },
    {
        "intent": "Sumar elementos contenidos en un diccionario Python",
        "rewritten_intent": "¿Cómo crear un diccionario `dic2` con la suma de los valores de cada una de las llaves en un diccionario `dic`?",
        "snippet": "dic2 = {key: [sum(value)] for key, value in dic.items()}",
        "question_id": 87732
    },
    {
        "intent": "Sumar elementos contenidos en un diccionario Python",
        "rewritten_intent": "¿Cómo crear un diccionario `dic2` con la suma de los valores de cada una de las llaves en un diccionario `dic`?",
        "snippet": " def suma_valores_dic(dic):\n        dic2 = {}\n        for key, value in dic.items():\n            suma = 0\n            for v in value:\n                suma += v\n            dic2[key] = suma\n        return dic2",
        "question_id": 87732
    },
    {
        "intent": "¿Cómo insertar filas a una matriz de numpy?",
        "rewritten_intent": "¿Cómo insertar `n` filas a una matríz `M` de numpy?",
        "snippet": "for i in range(n) : \n\tM = numpy.insert(M, i, [i + 1, 0, 0])",
        "question_id": 39070
    },
    {
        "intent": "¿Cómo extraigo el número mayor y menor que el usuario introduce en la lista?",
        "rewritten_intent": "¿Cómo extrar el número mayor  y el número menor que el usuario introduce por comando a una lista `list`?",
        "snippet": "num = int(input('¿Cuántos números vas a introducir?: '))\nlist = []\nfor _ in range(num):\n    numero = int(input('Dime un número: '))\n    listaNumeros.append(numero)\n\nprint('El número mayor es el {}'.format(max(list)))\nprint('El número menor es el {}'.format(min(list)))",
        "question_id": 107415
    },
    {
        "intent": "¿Cómo extraigo el número mayor y menor que el usuario introduce en la lista?",
        "rewritten_intent": "¿Cómo extrar el número mayor  y el número menor que el usuario introduce por comando a una lista `list`?",
        "snippet": "num = int(input('¿Cuántos números vas a introducir?: '))\ncont=0\nmayor=0\nmenor=999999\nlist = []\nwhile num>0:\n    num=num-1\n    numeros=int(input('Dime un número: '))\n    listaNumeros.append(numeros)\n    if mayor<numeros:\n         mayor=numeros\n    if menor>numeros:\n         menor=numeros\n    if numeros<0:\n        cont=cont+1\n\nprint('El número mayor es el ' % mayor)\nprint('El número menor es el ' % menor)",
        "question_id": 107415
    },
    {
        "intent": "Eliminar filas y columnas de una matriz, tomando en cuanta sus elementos",
        "rewritten_intent": "¿Cómo eliminar filas y columnas de una matriz `matriz` si todos sus valores son 0?",
        "snippet": "good_cols = numpy.any(matriz_v.T != 0,  axis = 1)\nmatriz_v = matriz_v[:, good_cols][good_cols, :]",
        "question_id": 71462
    },
    {
        "intent": "¿cómo filtrar columnas y sumar en pandas?",
        "rewritten_intent": "¿Cómo sumar los valores de la columna `a` agrupando los valores de las columnas `b` y `c` en un dataframe df?",
        "snippet": "g = df.groupby(['b', 'c'])['a'].sum()",
        "question_id": 122879
    },
    {
        "intent": "Graficar datos de una hoja excel con Python",
        "rewritten_intent": "¿Cómo graficar los datos de una hoja `sheet` de un documento de excel `file`?",
        "snippet": "wb = load_workbook(file, data_only=True)\nsheet1 = wb.get_sheet_by_name(sheet)\n\nmatriz = np.zeros((sheet1.max_row, sheet1.max_column))\n\nfor i in range(0,sheet1.max_row):\n    for j in range(0,sheet1.max_column):\n        matriz[i,j]=sheet1.cell(row=i+1, column=j+1).value\n\ncolors = cycle([\"aqua\", \"black\", \"blue\", \"fuchsia\", \"gray\", \"green\", \"lime\", \"maroon\", \"navy\", \"olive\", \"purple\", \"red\", \"silver\", \"teal\", \"yellow\"])\nplt.xlabel('tiempo')\nplt.ylabel('intensidad')\nfor y in range(1, sheet1.max_column):\n    plt.plot(matriz[:,0],matriz[:,y], label=\"Data \" + str(y),       color=next(colors))\nplt.legend(loc='upper left', fontsize='small')\nplt.grid(True)\nplt.xlim(0,70)\nplt.ylim(0,70)\nplt.title('Grafica tiempo/intensidad')\nplt.show()",
        "question_id": 26373
    },
    {
        "intent": "Almacenar en una lista datos generados en un ciclo for",
        "rewritten_intent": "¿Cómo almacenar en una lista `list` los datos generados en un for que recorre una lista `list2`?",
        "snippet": "list = [(i+1) for i in list2]",
        "question_id": 117775
    },
    {
        "intent": "¿Cómo puedo extraer solo determinadas columnas de un csv y crear un DataFrame con ellas?",
        "rewritten_intent": "¿Cómo extraer la columna `col` de un DataFrame `df_viejo` y crear un DataFrame `df` con ellas?",
        "snippet": "df = pandas.DataFrame()\n df[col] = df_viejo[col]",
        "question_id": 132982
    },
    {
        "intent": "¿Cómo puedo formar matrices en Python?",
        "rewritten_intent": "¿Cómo formar matrices `M` de `m x 2` datos ingresados por el usuario?",
        "snippet": "m = int(input(\"Teclea el número de filas:\"))\nM = np.array(\n    np.zeros((m)), \n    dtype = [\n        ('p', int),\n        ('q', int)\n    ]\n) \nfor i in range(m):\n    p_ = input(\"p: \")\n    M['p'][i] = int(p_)\n    q_ = input(\"q: \")\n    M['q'][i] = int(q_)\n\nprint(mi_arr)",
        "question_id": 13245
    },
    {
        "intent": "Simulador de lanzamiento de dado en Python",
        "rewritten_intent": "¿Cómo simular el lanzamiento de un dado `n` veces?",
        "snippet": "def dice():\n  dado = []\n  for i in range(n):\n      dado.append(random.choice(range(1,7)))\n  return dado",
        "question_id": 99638
    },
    {
        "intent": "Simulador de lanzamiento de dado en Python",
        "rewritten_intent": "¿Cómo simular el lanzamiento de un dado `n` veces?",
        "snippet": "def dado(n):\n    result=[]\n    for i in xrange(0,n):\n        result.append(random.randint(1, 6))\n    return result",
        "question_id": 99638
    },
    {
        "intent": "¿Cómo pausar un script de Python por unos segundos?",
        "rewritten_intent": "¿Cómo pausar un script por `n` segundos?",
        "snippet": "time.sleep(n)",
        "question_id": 36394
    },
    {
        "intent": "Sumar enteros de un array en python",
        "rewritten_intent": "¿Cómo sumar todos los enteros dentro de una matriz `M`?",
        "snippet": "sum(itertools.chain.from_iterable(M))",
        "question_id": 167201
    },
    {
        "intent": "Sumar enteros de un array en python",
        "rewritten_intent": "¿Cómo sumar todos los enteros dentro de una matriz `M`?",
        "snippet": "suma = sum(sum(x) for x in M)",
        "question_id": 167201
    },
    {
        "intent": "¿Como guardar una imagen de cualquier formato en Python?",
        "rewritten_intent": "¿Como guardar una imagen ubicada en el directorio `dir` en un nuevo directorio `dir2`?",
        "snippet": "mg = Image.open(dir)\nimg.save(dir2)",
        "question_id": 93379
    },
    {
        "intent": "Ejecutar cadena de archivos python",
        "rewritten_intent": "¿Cómo ejecutar los archivos `file1`, `file2` y `file3` en secuencia?",
        "snippet": "process1 = subprocess.Popen(['python', file1])\nprocess2 = subprocess.Popen(['python', file2])\nprocess3 = subprocess.Popen(['python', file3])",
        "question_id": 107612
    },
    {
        "intent": "Obtener elementos comunes de dos listas sin repeticiones",
        "rewritten_intent": "¿Cómo obtener los elementos comunes de dos listas `a` y `b`?",
        "snippet": "def listas(a, b):\n    lista_final = []\n    for i in a:\n        if (i not in lista_final) and (i in b):\n            lista_final.append(i)\n    return lista_final",
        "question_id": 129553
    },
    {
        "intent": "Obtener elementos comunes de dos listas sin repeticiones",
        "rewritten_intent": "¿Cómo obtener los elementos comunes de dos listas `a` y `b`?",
        "snippet": "def intersection(a,b):\n    c = []\n    for i in a:\n        for j in b:\n           if i == j:\n               c.append(i)\n    c = list(tuple(c))\n    return c            ",
        "question_id": 129553
    },
    {
        "intent": "Obtener la posición y el valor del segundo mayor elemento de una lista",
        "rewritten_intent": "¿Cómo obtener la posición y el valor del segundo mayor elemento de una lista `list`?",
        "snippet": "list_sort = sorted(enumerate(list), key=itemgetter(1),  reverse=True)\nindex, value = list_sort[1]",
        "question_id": 98725
    },
    {
        "intent": "¿Cómo puedo ordenar una cadena (string) de forma descendente según su longitud?",
        "rewritten_intent": "¿Cómo ordenar una cadena `S` desde su palabra más larga a la más corta?",
        "snippet": "sorted(S.split(), key=lambda palabra: len(palabra), reverse=True)",
        "question_id": 1732
    },
    {
        "intent": "¿Cómo puedo ordenar una cadena (string) de forma descendente según su longitud?",
        "rewritten_intent": "¿Cómo ordenar una cadena `S` desde su palabra más larga a la más corta?",
        "snippet": "for i in reversed(sorted(S.split(), key=lambda item: len(item))):\n    print i",
        "question_id": 1732
    },
    {
        "intent": "For anidado en python",
        "rewritten_intent": "¿Cómo realizar una iteración anidada del valor de una lista `list` y luego de los valores siguientes hasta el final?",
        "snippet": "for i, item in enumerate(list):\n    for item2 in list[i:]:\"\n  ",
        "question_id": 9367
    },
    {
        "intent": "For anidado en python",
        "rewritten_intent": "¿Cómo realizar una iteración anidada del valor de una lista `list` y luego de los valores siguientes hasta el final?",
        "snippet": "for i in range(len(list)):\n    for j in range((i+1), len(list)):  \n        print(list[j])",
        "question_id": 9367
    },
    {
        "intent": "For anidado en python",
        "rewritten_intent": "¿Cómo realizar una iteración anidada del valor de una lista `list` y luego de los valores siguientes hasta el final?",
        "snippet": "for i in list\n    for j in list[i+1:len(j)]",
        "question_id": 9367
    },
    {
        "intent": "Cómo cortar una string en Python de derecha a izquierda, incluyendo toda la string?",
        "rewritten_intent": "¿Cómo recorrer una cadena `S` de derecha a izquierda?",
        "snippet": "S[::-1]",
        "question_id": 138290
    },
    {
        "intent": "¿Como convertir un dato int a string en python?",
        "rewritten_intent": "¿Cómo convertir un dato `a` de `string` a `int`?",
        "snippet": "numero= int(a)",
        "question_id": 364966
    },
    {
        "intent": "Conversor de bases decimal, binaria, hexadecimal, octal en Python",
        "rewritten_intent": "¿Cómo retornar dos valores `val1` y `val2` en una función?",
        "snippet": "return var1, var2",
        "question_id": 51410
    },
    {
        "intent": "¿Como verifico si un archivo tiene contenido o está vacío en Python?",
        "rewritten_intent": "¿Como verifico si un archivo `file` tiene contenido o está vacío?",
        "snippet": "if os.stat(file).st_size == 0:\n     print('Vacío')",
        "question_id": 30666
    },
    {
        "intent": "¿Como verifico si un archivo tiene contenido o está vacío en Python?",
        "rewritten_intent": "¿Como verifico si un archivo `file` tiene contenido o está vacío?",
        "snippet": "os.stat(file).st_size == 0",
        "question_id": 30666
    },
    {
        "intent": "¿Como verifico si un archivo tiene contenido o está vacío en Python?",
        "rewritten_intent": "¿Como verifico si un archivo `file` tiene contenido o está vacío?",
        "snippet": "archivo = open(file, 'r')\n\nvacio = True\nfor linea in archivo:\n    if len(linea) > 0:\n        vacio = False\n\narchivo.close()\n\nif vacio:\n    print('El archivo está vacio')\nelse:\n    print('El archivo contiene algo')",
        "question_id": 30666
    },
    {
        "intent": "Iterar una lista y guardarla en un archivo",
        "rewritten_intent": "¿Cómo iterar una lista `list` y guardar sus valores en un archivo `file`?",
        "snippet": "mi_path = file\nf = open(mi_path, 'a+')\n\nfor i in list:\n    f.write(i)\n\nf.close()",
        "question_id": 86430
    },
    {
        "intent": "Iterar una lista y guardarla en un archivo",
        "rewritten_intent": "¿Cómo iterar una lista `list` y guardar sus valores en un archivo `file`?",
        "snippet": "f = open(file, \"a\")\n\nfor i in list:\n    f.write(i)\n\nf.close()",
        "question_id": 86430
    },
    {
        "intent": "Reemplazar comas por puntos en un dataframe (coma como separador decimal)",
        "rewritten_intent": "¿Cómo reemplazar el separador decimal de comas por puntos en la columna `col` de un DataFrame `df`?",
        "snippet": "df['col_1'] = df[col].str.replace(',', '.').astype(float)",
        "question_id": 183061
    },
    {
        "intent": "Reemplazar comas por puntos en un dataframe (coma como separador decimal)",
        "rewritten_intent": "¿Cómo reemplazar el separador decimal de comas por puntos en la columna `col` de un DataFrame `df`?",
        "snippet": "comas_por_puntos = [float(x.replace(',','.')) for x in df[col]]",
        "question_id": 183061
    },
    {
        "intent": "Guardar una matriz como archivo .csv en Python",
        "rewritten_intent": "¿Cómo guardar una matriz `M` en un archivo `file.csv`?",
        "snippet": "with open(file.csv, 'w', newline='', encoding='utf-8') as csvfile:\n    writer = csv.writer(csvfile)\n    writer.writerows(M)",
        "question_id": 61046
    },
    {
        "intent": "¿Cómo determino la palabra más larga y más corta de un string?, sin usar métodos o funciones",
        "rewritten_intent": "¿Cómo determinar la palabra más larga `mayor` y la más corta `menor` de un String `S`?",
        "snippet": "mayor=''\nmenor=''\npalabra=''\n\nfor c in oracion:\n  if c == ' ':\n    if palabra != '':\n      mayor = palabra if len(mayor)<len(palabra) or mayor == '' else mayor\n      menor = palabra if len(menor)>len(palabra) or menor == '' else menor\n\n    palabra = ''\n\n  palabra = palabra + c\n\nprint(mayor)\nprint(menor)",
        "question_id": 109768
    },
    {
        "intent": "¿Cómo determino la palabra más larga y más corta de un string?, sin usar métodos o funciones",
        "rewritten_intent": "¿Cómo determinar la palabra más larga `mayor` y la más corta `menor` de un String `S`?",
        "snippet": "z,n=0,0\nmayor=''\nmenor=p\nwhile z<len(S):\n    for letra in S[z:len(S)] :\n        z+=1\n        n+=1\n        if letra==' ':\n            break\n    if S[z-n:z-1]!='':\n        if len(S[z-n:z-1])>=len(mayor):\n            mayor=S[z-n:z-1]\n        if len(S[z-n:z-1])<=len(menor):\n            menor=S[z-n:z-1]\n    n=0\nprint mayor\nprint menor",
        "question_id": 109768
    },
    {
        "intent": "Ejecutar script en python cada segundo",
        "rewritten_intent": "¿Cómo ejecutar un script `script` cada segundo?",
        "snippet": "def ejecutaScript(script):\n    Script\n    print 'Ejecutando Script...'\n    time.sleep(1)\n\nwhile True:\n    ejecutaScript(script)",
        "question_id": 6786
    },
    {
        "intent": "Desviación Estandar en Python con Pandas",
        "rewritten_intent": "¿Cómo calcular la desviación estándar de la columna `col` en un DataFrame `df`?",
        "snippet": "std = df[col].std()",
        "question_id": 191740
    },
    {
        "intent": "Determinar todos los múltiplos de un número en Python",
        "rewritten_intent": "¿Cómo determinar si los dígitos de un número `Num` son múltiplos de los otros dígitos del mismo número?",
        "snippet": "Num=abs(int(input('Digite un número entero de tres dígitos')))\nif Num==0 or Num==1:\n    print('El número ingresado no tiene tres dígitos \\a')\nelse:\n    Num_Dig=ceil(log10(Num))\n    if Num_Dig!=3:  \n        print('El número ingresado no tiene tres dígitos \\a')\n    else:\n        Dig_1=Num%10\n        Dig_2=(Num%100)//10\n        Dig_3=(Num//100)\n        ninguno = True\n        if Dig_1%Dig_2==0:\n            print('El dígito {Dig_1} es multiplo de {Dig_2}')\n            ninguno = False\n        if Dig_1%Dig_3==0:\n            print('El dígito {Dig_1} es multiplo de {Dig_3}')\n            ninguno = False\n        if Dig_2%Dig_1==0:\n            print('El dígito {Dig_2} es multiplo de {Dig_1}')\n            ninguno = False\n        if Dig_2%Dig_3==0:\n            print('El dígito {Dig_2} es multiplo de {Dig_3}')\n            ninguno = False\n        if Dig_3%Dig_1==0:\n            print('El dígito {Dig_3} es multiplo de {Dig_1}')\n            ninguno = False\n        if ninguno:\n            print('Ningún dígito en el número {Num} es multiplo de otro')",
        "question_id": 195388
    },
    {
        "intent": "Recorrer carpetas en python",
        "rewritten_intent": "¿Cómo listar todos los archivos y subcarpetas en una carpeta `dir`?",
        "snippet": "rootDir = dir\nfor dirName, subdirList, fileList in os.walk(rootDir):\n    print('Directorio encontrado: %s' % dirName)\n    for fname in fileList:\n        print('\\t%s' % fname)",
        "question_id": 4292
    }
]
