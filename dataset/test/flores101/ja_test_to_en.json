[{"intent": "About the meaning of mglearn.discrete_scatter (X_train[:, 0], X_train[:, 1], y_train)", "snippet": "arr[:, 0]", "question_id": 37146, "rewritten_intent": "Out of the two-dimensional array 'arr' elements, one-dimensional array only extract the first value "}, {"intent": "Tell us how to convert from python\u2019s Pandas data framework to a specific dictionary.", "snippet": "df.to_dict()", "question_id": 25263, "rewritten_intent": "Converting data frames into dictionary objects "}, {"intent": "Using beautifulsoup, I want to write a regular 20 row 24 row race horse data sheet to CSV.", "snippet": "soup.find('tbody').find_all('tr')", "question_id": 28178, "rewritten_intent": "Get each line from a HTML table "}, {"intent": "Matplotlib to change the color of the specific axis of y", "snippet": "labels[n].set_color('red')", "question_id": 21638, "rewritten_intent": "Change the color of the specific eye of the y axis to red "}, {"intent": "Change the value of the local variable in a function from the failed function.", "rewritten_intent": "See and change the variable 'a' defined in the external function from the missing function.", "snippet": "nonlocal a", "question_id": 34517}, {"intent": "You can\u2019t receive the data that you send by POST on Python\u2019s cgi.FieldStrage", "snippet": "class handler(http.server.BaseHTTPRequestHandler):\n    def do_POST(self):\n        os.environ['REQUEST_METHOD'] = 'POST'\n        form = cgi.FieldStorage(self.rfile, self.headers)", "question_id": 8656, "rewritten_intent": "Receive POST data on cgi.FieldStrage "}, {"intent": "What should I do if I want to randomly select one element from the list? (python)", "snippet": "random.choice(li)", "question_id": 9836, "rewritten_intent": "Select one element in random from a list 'li' "}, {"intent": "I want to convert the results in word2vec in text mode into output results in binary mode in Python.", "snippet": "X = np.array(d, dtype='float32')\nX.tofile('binaryVec.bin')", "question_id": 1589, "rewritten_intent": "The element will save a numerical list-type data`d` as binary data`binaryVrc.bin` "}, {"intent": "There is a error in the operation of XML in python.", "snippet": "doc.toxml(encoding='sjis'))", "question_id": 16807, "rewritten_intent": "Push the xml document 'doc' with the word code 'sjis` "}, {"intent": "Can you write and read a file on a jupyter notebook?", "rewritten_intent": "Close the open file 'f'", "snippet": "f.close()", "question_id": 38532}, {"intent": "It is about the multipart requirements.", "snippet": "requests.post(url, files=files, data=data)", "question_id": 37696, "rewritten_intent": "Post multiple data files and data to url "}, {"intent": "I want to share data with Scikit-learn taking into account class numbers.", "rewritten_intent": "Sklearn.model_selection.Stratified ShuffleSplit", "snippet": "sss = StratifiedShuffleSplit()\nsss.get_n_splits(X, y)", "question_id": 29368}, {"intent": "Problems with not displaying axis numbers when using matplotlib", "snippet": "plt.yticks(range(low,high))", "question_id": 40699, "rewritten_intent": "The range of the y axis is set to \u2018low\u2019 and \u2018high\u2019 "}, {"intent": "Get the coordinates on the 3D graphics of matplotlib", "snippet": "fig.canvas.mpl_connect('pick_event', onclick)", "question_id": 11011, "rewritten_intent": "Showing the coordinates of selected data on the chart "}, {"intent": "I want to remove elements other than Japanese from the list.", "snippet": "re.compile('[\u3041-\u3093\u30a1-\u30f3\u4e00-\u9fa5]+')", "question_id": 42344, "rewritten_intent": "Get a regular expression to distinguish from Japanese (Katarana, Kannada, Kannada) "}, {"intent": "Enter your password and download it automatically.", "snippet": "br.submit().read()", "question_id": 17145, "rewritten_intent": "Read the return value when you submit from the browser object `br` "}, {"intent": "I would like to get out of python 3 with a blank separation.", "rewritten_intent": "Show \u2018data\u2019 in a blank partition.", "snippet": "[print(*i) for i in data]", "question_id": 38824}, {"intent": "I would like to get out of python 3 with a blank separation.", "rewritten_intent": "Show \u2018data\u2019 in a blank partition.", "snippet": "for i in data:\n     print(' '.join(str(j) for j in i))", "question_id": 38824}, {"intent": "I would like to get out of python 3 with a blank separation.", "rewritten_intent": "Show \u2018data\u2019 in a blank partition.", "snippet": "for i in data:\n     print(' '.join(map(str, i)))", "question_id": 38824}, {"intent": "I want to calculate the equation of more than 0 of the elements of Tensorflow.", "rewritten_intent": "Calculate the equation of values greater than 0 of the elements of the 'n' \u00d7 'n' template.", "snippet": "z = tf.constant(0, shape=[n, n], dtype=tf.int32)\nabs = tf.maximum(t, z)\nresult = tf.reduce_sum(abs)", "question_id": 35299}, {"intent": "I want to create a button that only closes sub-windows in pyqt 5.", "snippet": "button.clicked.connect(self.w.close)", "question_id": 40370, "rewritten_intent": "When the 'button' button is clicked, only the relevant window is closed "}, {"intent": "Data from the files uploaded by Flask, request.data, becomes empty.", "snippet": "hashlib.sha1(f.read()).hexdigest()", "question_id": 27830, "rewritten_intent": "Search for the SHA1 hash value of the file`f` "}, {"intent": "How to insert PDF data in python3+SQlite", "snippet": "db.execute('insert into img_table values(?)', [blob])", "question_id": 41677, "rewritten_intent": "Insert 'blob' image data into 'img_table' in the DB "}, {"intent": "Configuration of Django database.", "snippet": "print(settings.DATABASES)\n", "question_id": 33970, "rewritten_intent": "Showing the database settings "}, {"intent": "I want to remove the numbers in the dataframe.", "snippet": "df.x.str.extract(pat)", "question_id": 38328, "rewritten_intent": "Apply the standard expression 'pat' to each line of data in the 'df' column label 'x' of the data frame "}, {"intent": "I can\u2019t write to CSV. Please tell me", "rewritten_intent": "Open the file \u2018file\u2019 in the writing mode.", "snippet": "open(file, 'w')", "question_id": 37418}, {"intent": "Determination of the starting point of the graph in matplotlib", "snippet": "plt.plot(x_list, y_list)", "question_id": 41200, "rewritten_intent": "Specify to draw a chart from data 'x_list' and 'y_list' "}, {"intent": "I don\u2019t want to press the button at Pyqt 5.", "snippet": "btn.setEnabled(False)", "question_id": 43255, "rewritten_intent": "Do not press the 'btn' button "}, {"intent": "The link to the pandas series", "snippet": "pd.DataFrame([a, b])", "question_id": 43369, "rewritten_intent": "Combining two data frames 'a' and 'b' in the direction of direction "}, {"intent": "Ascii' codec can't encode characters in position 0-1: ordinary not in range (128)", "snippet": "f = codecs.open(file, 'r', 'utf-8')", "question_id": 24438, "rewritten_intent": "Enter the word code to utf-8 and open the file`file` "}, {"intent": "Do you change your code when you read the text file?", "rewritten_intent": "Open the file as a binary data.", "snippet": "with open(file, 'rb') as f:\n    data = f.read()", "question_id": 10215}, {"intent": "Can you easily see the content of the missing list?", "snippet": "pprint.pprint(li)", "question_id": 28982, "rewritten_intent": "The list 'li' is easily visible "}, {"intent": "File mode of python pickle (binary mode)", "snippet": "pickle.dump(x, open('hoge.pkl', 'wb'))", "question_id": 18992, "rewritten_intent": "Save the object 'x' in the file 'hoge.pkl' "}, {"intent": "Substitution of Pandas letters.", "snippet": "df.replace(change_dict)", "question_id": 38400, "rewritten_intent": "Replace several different elements of the data frame`df` according to the key pair of the dictionary object`change_dict` and elements "}, {"intent": "I want to enter data from outside to the Django database.", "snippet": "b.save()", "question_id": 17321, "rewritten_intent": "Insert or update the object 'a' in DB and save it "}, {"intent": "I want to get a cvv in pandas.", "rewritten_intent": "Include 100 CSV files 'file_%d' in the list.", "snippet": "data = []\ni = 0\nwhile(i<100):\n    data.append(pd.read_csv('file_%d.csv'%i))\n    i+=1", "question_id": 35793}, {"intent": "About TfidfVectorizer of sklearn", "snippet": "numpy.save('my_vector', vectorized.toarray()", "question_id": 20549, "rewritten_intent": "Save the vector 'vectorized' of learning data in the file 'my_vector.npy` "}, {"intent": "Python: I want to return index in the iterator class", "rewritten_intent": "Repeat processing of list'li's indices and elements.", "snippet": "for i, name in enumerate(li):\n    print(i, name)", "question_id": 9518}, {"intent": "English language in Python in PDF.", "rewritten_intent": "Open the HTML file 'test.html' and save the text object 'text' in utf-8", "snippet": "f = open('test.html', 'w')\nf.write(text.encode('utf-8'))", "question_id": 19144}, {"intent": "I want to import modules above the layers that run programs in Python.", "snippet": "path = os.path.split(os.path.dirname(os.path.realpath(__file__)))[0]\nsys.path.append(path)", "question_id": 39740, "rewritten_intent": "To import modules of higher layers than the run program, add the corresponding Path to Python Path "}, {"intent": "Is there a sumif, countif function like Excel in the Numpy layout?", "rewritten_intent": "number number number number number number number number number number number number number number number number number number number number number number number number number number", "snippet": "print(arr[arr > n].sum())\nprint(numpy.sum(arr > n))", "question_id": 38760}, {"intent": "Create a second-level circuit.", "rewritten_intent": "Find the letters 'area_code' and 'prefecture' from the elements of 'data' and create a dictionary 'results' with key and elements each.", "snippet": "results = {}\nfor item in data:\n    results[item.find('areacode').text] = item.find('prefecture').text", "question_id": 35102}, {"intent": "Conversions from List to Np.array", "snippet": "np.stack(arr_list)", "question_id": 41440, "rewritten_intent": "The element converts the list 'arr_list' of the NumPy array into a two-dimensional NumPy array "}, {"intent": "About HTML tools using Python 3 and Beautifulsoup 4.", "snippet": "soup.find_all('p')", "question_id": 35741, "rewritten_intent": "Find all the tags 'p' from the object `soup` that has passed HTML "}, {"intent": "Processing CSV data in Python.", "snippet": "df.groupby([c_lable]).last()", "question_id": 40444, "rewritten_intent": "Extract the last line of data collected in Groupby with the 'c_label' of the 'df' data frame "}, {"intent": "Extract the value of the list from Python list", "rewritten_intent": "Showing what matches the list 'b_list' elements in the list 'a_list'", "snippet": "print([i for i in b_list if i in a_list])", "question_id": 39240}, {"intent": "Conversions of dates including the English name of the month", "snippet": "datetime.strptime(dt_s,'%d%b%Y')", "question_id": 39375, "rewritten_intent": "Convert the letterline 'dt_s' of the date format '%d%b%Y' to the date-time type "}, {"intent": "I want to change the size of the slide with python-pptx.", "snippet": "ppt.slide_width = X\nppt.slide_height = Y", "question_id": 37638, "rewritten_intent": "Change the size of the presentation object`ppt` to the width`X` and the width`Y` in English Metric Unit "}, {"intent": "Partition of numbers in Python 3.", "rewritten_intent": "Separate the number 'n' and keep it in the list.", "snippet": "li = [int(c) for c in n]", "question_id": 38960}, {"intent": "Python Selenium is an open source for JavaScript.", "rewritten_intent": "Seleniumt will deactivate JavaScript when Firefox is specified.", "snippet": "options = Options()\noptions.set_preference('javascript.enabled', False)\ndriver = webdriver.Firefox(options=options", "question_id": 33908}, {"intent": "Python Selenium is an open source for JavaScript.", "rewritten_intent": "Seleniumt will deactivate JavaScript when Firefox is specified.", "snippet": "profile = webdriver.FirefoxProfile()\nprofile.DEFAULT_PREFERENCES['frozen']['javascript.enabled'] = False\nprofile.set_preference(\"app.update.auto\", False)\nprofile.set_preference(\"app.update.enabled\", False)\nprofile.update_preferences()", "question_id": 33908}, {"intent": "Python Selenium is an open source for JavaScript.", "rewritten_intent": "Seleniumt will deactivate JavaScript when Firefox is specified.", "snippet": "profile = webdriver.FirefoxProfile()\nprofile.set_preference(\"javascript.enabled\", False)\ndriver = webdriver.Firefox(profile)", "question_id": 33908}, {"intent": "About isnumeric()", "rewritten_intent": "Determining whether the letter 's' represents a number.", "snippet": "s.isnumeric()", "question_id": 19770}, {"intent": "Use PySocks for Web Scrapping through Tor", "rewritten_intent": "Save the Socket Information.", "snippet": "original_socket = socket.socket", "question_id": 29614}, {"intent": "Get the last file name in the folder.", "snippet": "os.listdir(dir)", "question_id": 41032, "rewritten_intent": "Get a list of files in the directory`dir` "}, {"intent": "Error in files = os.listdir ('./data/' + d)", "rewritten_intent": "It will determine if the image \u2018img\u2019 is empty.", "snippet": "img is None", "question_id": 37709}, {"intent": "About the cupy-processed array combination.", "snippet": "cupy.concatenate((a_1,a_2),axis=0)", "question_id": 39516, "rewritten_intent": "Combining the ranges 'a_1' and 'a_2' "}, {"intent": "I want to get a Chinese tweet from python on Twitter.", "rewritten_intent": "Stream Object 'stream' only issues languages from Chinese tweets", "snippet": "stream.filter(track=[u'\u4e2d\u56fd', ], languages=['zh'])", "question_id": 29331}, {"intent": "It is not possible to use class and saver.save together in tensorflow.", "rewritten_intent": "Defined class 'cnn' to read the learned model 'mode.ckpt'", "snippet": "cnn.saver.restore(cnn.sess, 'model.ckpt')", "question_id": 35881}, {"intent": "Tell us how to use the sympy coeff.", "rewritten_intent": "List the number of multi-paragraphs of \"x\" for each of the \"f\" dimensions.", "snippet": "p = Poly(f, x)\np.coeffs()", "question_id": 33677}, {"intent": "Why is If 1 and 5 True?", "snippet": "a & b", "question_id": 37449, "rewritten_intent": "Get the variable 'a' and 'b' of the bit calculation "}, {"intent": "What are the globals used for?", "rewritten_intent": "Get a list of global variables.", "snippet": "globals()", "question_id": 42442}, {"intent": "What should I do when I program a game in Python, when I enter data in multiple lines (up to the end of the entry) with space separation in a row?", "rewritten_intent": "Save and display the input 'stdin' in the number of changes divided by space.", "snippet": "for line in stdin:\n    a = line.rstrip().split(' ')\n    print(a)", "question_id": 40830}, {"intent": "What should I do when I program a game in Python, when I enter data in multiple lines (up to the end of the entry) with space separation in a row?", "rewritten_intent": "Save and display the input 'stdin' in the number of changes divided by space.", "snippet": "l = []\nfor line in stdin:\n  a = line.rstrip().split(' ')\n  l.append(a)\nprint(l)", "question_id": 40830}, {"intent": "In Python, you want to enter a text from a file and make a search for what word you search for and how many times it comes out.Can you make a list for each word when you search for it?", "rewritten_intent": "Numbering the words appearing in the list 'word_list'", "snippet": "Counter(word_list)", "question_id": 38030}, {"intent": "Using Tweepy, you learn a tweet containing a string of characters at a certain interval and tweet the articles contained in the tweet.", "snippet": "search = api.search(q=word)", "question_id": 38878, "rewritten_intent": "Use the tweepy instance 'api' to search for tweets containing a string of 'word' and get results as a list "}, {"intent": "In python, you want to use lambda to create a function \"Accept and return\"", "rewritten_intent": "Receive functions `f` and `g` and define the add_functions` to calculate the equation between the functions.", "snippet": "def add_functions(f, g):\n    return lambda x: f(x) + g(x)", "question_id": 38724}, {"intent": "Can I get class objects in python?", "rewritten_intent": "Get Object 'obj' class.", "snippet": "type(obj)", "question_id": 22439}, {"intent": "Can I get class objects in python?", "rewritten_intent": "Get Object 'obj' class.", "snippet": "obj.__class__", "question_id": 22439}, {"intent": "I want to show the URL that I have designated.", "snippet": "with urllib.request.urlopen(url) as r:\n    print(r.read())", "question_id": 39340, "rewritten_intent": "Show the contents of the URL`url` specified "}, {"intent": "Python 2.7 Opencv3.0 features.", "snippet": "cv2.drawKeypoints(img, kp, img2, color=(0,255,0), flags=0)", "question_id": 17418, "rewritten_intent": "Draw the input image 'img' and the output image 'img2' as the characteristic point 'kp' "}, {"intent": "There is an error in os.walk (shutilcopy).", "snippet": "os.path.join(foldername, filename)", "question_id": 39589, "rewritten_intent": "Get a path that combines folder name 'foldername' and file name 'filename' "}, {"intent": "Data processing in python pandas.", "snippet": "ax.set_xlim(l, h)", "question_id": 23577, "rewritten_intent": "Specify the range of the X axis to the lower limit`l` and the upper limit`h` "}, {"intent": "To cut and cut a whole number in Python.", "snippet": "int(math.ceil(src/float(range)) * range)", "question_id": 41087, "rewritten_intent": "Cut the whole number 'src' into the multiplication of a certain range' "}, {"intent": "To cut and cut a whole number in Python.", "snippet": "src if src % range == 0 else src + range - src % range", "question_id": 41087, "rewritten_intent": "Cut the whole number 'src' into the multiplication of a certain range' "}, {"intent": "In Numpy, we want to generate a random vector of n-dimensional under the restriction that the total number of elements is equal to N.", "snippet": "random_numbers = np.random.rand(n)\nanswer = N * random_numbers / np.sum(random_numbers)", "question_id": 40711, "rewritten_intent": "Under the constraint that the total number of elements is equal to 'N', a random vector of 'answer' of 'n' dimension is produced "}, {"intent": "In Numpy, we want to generate a random vector of n-dimensional under the restriction that the total number of elements is equal to N.", "snippet": "answer = np.random.dirichlet(np.ones(n)) * N", "question_id": 40711, "rewritten_intent": "Under the constraint that the total number of elements is equal to 'N', a random vector of 'answer' of 'n' dimension is produced "}, {"intent": "Select the range of elements that will be taken from the list and combine them to random.", "snippet": "random.shuffle(li)", "question_id": 31924, "rewritten_intent": "Change the list 'li' to random "}, {"intent": "Program to calculate the combination of articles.", "snippet": "itertools.product(a,b)", "question_id": 40343, "rewritten_intent": "Generate multiple list 'a` and 'b` straight volumes (decalts) and get the result of the combination of elements "}, {"intent": "How to write the data extracted from the data in a regular expression into a new column?", "rewritten_intent": "Extract the row 'a' of the 'df' data frame with a regular expression 'reg'", "snippet": "df['a'].str.extract(reg, expand=True)", "question_id": 36217}, {"intent": "How to store the characters generated in the for-script in the tables", "snippet": "d = {f+s : cost for ((f,s), cost) in zip(product(factories,shops), costs)}", "question_id": 27871, "rewritten_intent": "Create a combination of two list 'factories' and 'shops' elements, and taple 'costs' each element to create dictionary-type objects like elements "}, {"intent": "How to store the characters generated in the for-script in the tables", "snippet": "root = [''.join((x, y)) for x, y in itertools.product(factories, shops)]\nd = dict(zip(root, cost))", "question_id": 27871, "rewritten_intent": "Create a combination of two list 'factories' and 'shops' elements, and taple 'costs' each element to create dictionary-type objects like elements "}, {"intent": "Get the content of a particular li using BeautifulSoup", "snippet": "sop.find_all(attrs={\"data-locate\": \"address\"})", "question_id": 40676, "rewritten_intent": "You can not use HTML5 data-attributes, such as 'data-locel' to search out what corresponds to 'address' from object 'soup' "}, {"intent": "I want to combine the headlines in the list.", "rewritten_intent": "Get a string 's' that combines the headings of a list 'li' that has a string of characters in elements.", "snippet": "s = ''.join(i[0] for i in li)", "question_id": 42256}, {"intent": "I want to combine the headlines in the list.", "rewritten_intent": "Get a string 's' that combines the headings of a list 'li' that has a string of characters in elements.", "snippet": "s = ''\nfor line in li:\n    s += v[0]", "question_id": 42256}, {"intent": "I want to use the list in python for circle.", "rewritten_intent": "Do not break the conditions that element 'i' is included in the list 'li'.", "snippet": "if i not in li:", "question_id": 18967}, {"intent": "POST data should be bytes or an iterable of bytes", "snippet": "json.dumps(req_data).encode('utf-8'))", "question_id": 37648, "rewritten_intent": "Coding the data 'req_data' to the server by UTF-8 "}, {"intent": "In subprocess check_call, I want to keep the directory size out as a result.", "snippet": "cmd = 'du -b /var/hoge'\nint(subprocess.check_output(cmd, shell=True).split()[0])", "question_id": 22991, "rewritten_intent": "Use Linux du command to get the size of directory`/var/hoge` "}, {"intent": "Remove the gap between Japanese languages in Python", "snippet": "re.sub('([\u3042-\u3093\u30a2-\u30f3\u4e00-\u9fd0\u30fc])\\s+((?=[\u3042-\u3093\u30a2-\u30f3\u4e00-\u9fd0\u30fc]))',r'\\1\\2', str)", "question_id": 39502, "rewritten_intent": "Remove the blank in the 'str' string in Japanese "}, {"intent": "There is a error in the operation of XML in python.", "rewritten_intent": "Convert the variables 's' and 'n' into UTF-8.", "snippet": "u'{0}{1}'.format(s, n)", "question_id": 16805}, {"intent": "I want to create a list like 1,1,1,2,2,2,3,3,3,4,4.", "rewritten_intent": "One is \u2018N\u2019 one, two is \u2018N\u2019 one, and the \u2018M\u2019 one is a list of \u2018N\u2019 one.", "snippet": "[x+1 for x in range(M) for y in range(N)]", "question_id": 40978}, {"intent": "I want to create a list like 1,1,1,2,2,2,3,3,3,4,4.", "rewritten_intent": "One is \u2018N\u2019 one, two is \u2018N\u2019 one, and the \u2018M\u2019 one is a list of \u2018N\u2019 one.", "snippet": "[i // n + 1 for i in range(N * M)]", "question_id": 40978}, {"intent": "I would like to know the location of the pins on the graph shown in seaborn's distplot.", "snippet": "[h.get_height() for h in sns.distplot(x).patches]", "question_id": 39379, "rewritten_intent": "Get the height of the pins on the histogram on the data 'x' shown in distplot as a list "}, {"intent": "How to change the shape of the graph in matplotlib", "snippet": "ax=plt.subplot(aspect='equal')", "question_id": 38415, "rewritten_intent": "In the chart, the range of the image 'ax' is rectangular "}, {"intent": "How to change a string in instance in Python", "rewritten_intent": "Values the value of the string as a numerical instance variable.", "snippet": "locals()[string]", "question_id": 37757}, {"intent": "How to change a string in instance in Python", "rewritten_intent": "Values the value of the string as a numerical instance variable.", "snippet": "eval(string)", "question_id": 37757}, {"intent": "What are the elements in the element?", "snippet": "d = json.loads(s_json)", "question_id": 34422, "rewritten_intent": "Get a dictionary-type object 'd' from a 's_json' string representing JSON "}, {"intent": "I want to get im:id attributes in feedparser. (I\u2019m analysing the XML of Apple iOS ranking data)", "snippet": "soup.get('a_id')", "question_id": 27686, "rewritten_intent": "Get the attribute value of 'a_id' in the HTML tag in the 'soup' object "}, {"intent": "I want to write the extension of the file in a given folder.", "snippet": "[os.rename(f, f.replace('.dat', '.gui')) for f in os.listdir('.') if not f.startswith('.')]", "question_id": 41054, "rewritten_intent": "Convert all of the file extensions with a specific extension `.dat` in the Catalogue to `.gui` "}, {"intent": "Combination of DataFrame", "rewritten_intent": "Get a new data frame 'df2' that has reset the index of the 'df' data frame", "snippet": "df2 = df.reset_index(drop=True)", "question_id": 43303}, {"intent": "Extension and Supplementation of Data Frame", "snippet": "df.resample('1min').ffill()", "question_id": 43322, "rewritten_intent": "Repeat the data frame 'df' in the time series of data every minute, and the values between them are complemented by the previous values "}, {"intent": "Calculation of multiple numbers (a+jb+c+jd; a,b,c,d:real)", "rewritten_intent": "Only the real part of the replicate number 'z' is obtained.", "snippet": "z.real", "question_id": 35683}, {"intent": "Please tell us how to display combinations up to 0,1,2,....,a(b+1)", "snippet": "list(itertools.combinations(iter, r))", "question_id": 41058, "rewritten_intent": "Get the combination of the elements of the interable object`iter`s`r` as a list "}, {"intent": "I want to call the value of the Excel cell.", "snippet": "sheet.cell_value(row, col))", "question_id": 42573, "rewritten_intent": "Get the value of the cell in the row 'col' and the row 'row' in the 'sheet' object of Excel "}, {"intent": "How to make a error by the standard function used in the method", "rewritten_intent": "Show the error when the built-in function 'eval' is called.", "snippet": "__builtins__.eval = lambda x: 'eval is not allowed'", "question_id": 30539}, {"intent": "How to keep your number in the list", "rewritten_intent": "Enter \u2018args\u2019 and transfer the function to \u2018function\u2019.", "snippet": "func(*args)", "question_id": 40361}, {"intent": "Repeat the development of the data frame.", "snippet": "d = {'range': r, 'result': l}\ndf = pd.DataFrame(data=d)", "question_id": 43333, "rewritten_intent": "Create a data frame as a list 'l' to list 'r' and list 'result' to list 'r' elements "}, {"intent": "I want to capture all the exceptions in python and show details.", "rewritten_intent": "Show the details of the exception error.", "snippet": "try:\n    hoge()\nexcept:\n    traceback.print_exc()", "question_id": 6972}, {"intent": "I want to capture all the exceptions in python and show details.", "rewritten_intent": "Show the details of the exception error.", "snippet": "try:\n    hoge()\nexcept:\n    print(sys.exc_info())", "question_id": 6972}, {"intent": "I want to capture all the exceptions in python and show details.", "rewritten_intent": "Show the details of the exception error.", "snippet": "try:\n    hoge()\nexcept Exception as e:\n    print('Error:', e.args)\n    fuga()", "question_id": 6972}, {"intent": "If you use an open function, there will be a Unicode error.", "rewritten_intent": "Open the file 'C:\\Users\\Documents\\python programs`", "snippet": "f = open(r'C:\\Users\\Documents\\python programs', 'r', encoding='utf-8')", "question_id": 11582}, {"intent": "by Python Path.", "snippet": "print(sys.path)", "question_id": 12174, "rewritten_intent": "PYTHONPATH "}, {"intent": "Error in Python: 'NoneType' object has no attribute '__getitem__'", "snippet": "fetchone()", "question_id": 4616, "rewritten_intent": "Get the next line sequence of query results "}, {"intent": "I.O.Error: [Errno 2] No such file or directory", "rewritten_intent": "Show the current work directory.", "snippet": "print(os.getcwd())", "question_id": 20536}, {"intent": "I want to get a number of text lines in python.", "rewritten_intent": "Get the number of files in myfile.txt.", "snippet": "sum(1 for line in open('myfile.txt'))", "question_id": 6225}, {"intent": "I want to get a number of text lines in python.", "rewritten_intent": "Get the number of files in myfile.txt.", "snippet": "len(open('myfile.txt').readlines())", "question_id": 6225}, {"intent": "Examples that call process regularly in Python's threading.Timer", "rewritten_intent": "Do not use the root system regularly.", "snippet": "t=threading.Timer(interval, function)\nt.start()", "question_id": 24508}, {"intent": "If you are not None in Python, you will be able to process the variable in if.", "rewritten_intent": "If the variable 'a' is not None, the variable will be displayed.", "snippet": "if a is not None:\n    print(a)", "question_id": 47199}, {"intent": "Python does not use print, but it\u2019s all.", "rewritten_intent": "View all of the two-dimensional list 'list' in the screen.", "snippet": "for r in data:\n    list.append(', '.join(r))\nprint(\"\\n\".join(list))", "question_id": 23332}, {"intent": "Python Error'cp932' codec can't encode character", "snippet": "f = open('all_names.csv', 'w', encoding='UTF-8') ", "question_id": 34431, "rewritten_intent": "Enter the text code "}, {"intent": "How to search in a Python list in a part consistent manner", "rewritten_intent": "Remove the elements that partly match the string and the word string from the list and create a new list.", "snippet": "newlist = []\nif any(s.endswith('string') for s in list):\n    newl.append('string')", "question_id": 33700}, {"intent": "How to search in a Python list in a part consistent manner", "rewritten_intent": "Remove the elements that partly match the string and the word string from the list and create a new list.", "snippet": "newlist = []\nfor s in list:\n    if 'string' in s:\n        newlist.append(s)", "question_id": 33700}, {"intent": "I want the graph to be displayed, I want to stop.", "snippet": "plt.figure() ", "question_id": 27556, "rewritten_intent": "Showing a chart "}, {"intent": "TypeError: 'module' object is not callable appears", "snippet": "display(data_frame)", "question_id": 37060, "rewritten_intent": "Display the data_frame "}, {"intent": "As a cv2.imshow in Python, images will not be displayed.", "snippet": "cv2.imshow('image', img)\ncv2.waitKey(0)\ncv2.destroyAllWindows()", "question_id": 31537, "rewritten_intent": "View image`image`: Wait for the window to not close immediately "}, {"intent": "How to create a table in python?", "snippet": "table = Texttable()\nprint(table.draw())", "question_id": 12310, "rewritten_intent": "Show the table on the screen "}, {"intent": "Using Numpy in Python 3 comes to an error.", "snippet": "df = pd.read_csv('arena.txt', header=None, delim_whitespace=True, decimal=',')", "question_id": 19311, "rewritten_intent": "A few points are used to read the file 'arena.txt' "}, {"intent": "Str() does not return Python objects in json.loads.", "rewritten_intent": "Convert the object 'json_data` into a JSON string 'json_str`", "snippet": "json_str = json.dumps(json_data)", "question_id": 42268}, {"intent": "ValueError: too many values to unpack (expected 2) solution (python 3.7)", "snippet": "data = np.genfromtxt('file.csv')", "question_id": 51387, "rewritten_intent": "Enter the CSV file 'file.csv' to 'data' "}, {"intent": "How to remove only lines that meet specific conditions?", "snippet": "df.drop(df.index[df.row == \"condition\"], inplace=True)", "question_id": 38598, "rewritten_intent": "Remove the line that meets the \u2018condition\u2019 condition "}, {"intent": "Remove arbitrary values from the entries in the list.", "rewritten_intent": "Display values from the elements in the two-dimensional list`list`", "snippet": "print list[x][y]", "question_id": 20094}, {"intent": "I want to change the name of the list automatically in a python for circle.", "rewritten_intent": "For a circle to create a two-sized list 'list' with numbers in addition.", "snippet": "for i in range(x):\n  for j in range(y):\n    exec(\"list_\" + str(i) + \"_\" + str(j) + \"= [i, j]\")", "question_id": 18780}, {"intent": "I want to enter a date in the name of a Python text file.", "rewritten_intent": "Enter the current date in the file name.", "snippet": "now = datetime.datetime.now()\nfile_name = 'file_{0:%Y%m%d-%H%M%S}.txt'.format(now)", "question_id": 19552}, {"intent": "How to add lineary reversal straight lines to the spread chart painted in matplotlib", "snippet": "a, b = np.polyfit(x, y, 1)\nlinear = a * x + b\n\nax.plot(x, linear,color=\"black\")", "question_id": 38755, "rewritten_intent": "Add a straight line to the chart "}, {"intent": "How to get a class name from a Menba function", "rewritten_intent": "Get the name of the class from the Menba function.", "snippet": "class Foo:\n    def whoAmI(self):\n        print( \"I am \" + self.__class__.__name__)\n\nFoo().whoAmI()", "question_id": 4556}, {"intent": "How to get a class name from a Menba function", "rewritten_intent": "Get the name of the class from the Menba function.", "snippet": "class Foo(object):\n    def __init__(self):\n        print(self.__class__.__name__) # >>> Foo\n\na = Foo()\nprint(a.__class__.__name__) # >>> Foo", "question_id": 4556}, {"intent": "How to verify the presence of elements in XPath", "snippet": "try:\n    driver.find_element(By.XPATH, element)\nexcept:\n    process_if_the_element_does_not_exist", "question_id": 30895, "rewritten_intent": "Use XPath to process the existence of the element as a condition "}, {"intent": "I want to scrape the web in Python 3, but I don\u2019t open the existing URL.", "snippet": "headers = {\"User-Agent\": \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:47.0) Gecko/20100101 Firefox/47.0\"}", "question_id": 27922, "rewritten_intent": "Changing user agent to Firefox "}, {"intent": "FileNotFoundError appears if the file exists.", "snippet": "chdir('/path/to') ", "question_id": 42850, "rewritten_intent": "Change the current working directory to 'path/to' "}, {"intent": "I have downloaded HTML from my website by Python, but I can read it.", "snippet": "guess = chardet.detect(data)\nunicode_data = data.decode(guess['encoding'])", "question_id": 11182, "rewritten_intent": "Determining the code from data to Unicode "}, {"intent": "Problems with space separation when dealing with CSV in Pandas", "snippet": "pd.read_csv(file, sep='\\s+')", "question_id": 35394, "rewritten_intent": "Enter the CSV file \u2018file\u2019 divided into a blank "}, {"intent": "Problems with space separation when dealing with CSV in Pandas", "snippet": "pd.read_csv(file, delim_whitespace=True)", "question_id": 35394, "rewritten_intent": "Enter the CSV file \u2018file\u2019 divided into a blank "}, {"intent": "If a variable does not have a value, can you replace the value, and if you enter it, do you not make it smart?", "rewritten_intent": "If the variable\u2019s value is not included, only replace the value.", "snippet": "variable = value if variable is None else v", "question_id": 37591}, {"intent": "If a variable does not have a value, can you replace the value, and if you enter it, do you not make it smart?", "rewritten_intent": "If the variable\u2019s value is not included, only replace the value.", "snippet": "variable = value if variable is None else variable", "question_id": 37591}, {"intent": "When you try to open the file in python, there is an error called PermissionError: Permission denied.", "snippet": "os.startfile('C:\\Program Files\\....\\app.exe')", "question_id": 11601, "rewritten_intent": "Run the app on Windows "}, {"intent": "To get a number in Python.", "rewritten_intent": "Get the number 'number' by a number and make it a list 'num_list'.", "snippet": "num_list = []\nwhile numer != 0:\n  num.append(number % 10)\n  n /= 10\nnum_list.reverse()", "question_id": 26837}, {"intent": "To get a number in Python.", "rewritten_intent": "Get the number 'number' by a number and make it a list 'num_list'.", "snippet": "num_list = map(int, str(number))", "question_id": 26837}, {"intent": "AttributeError: module 'tensorflow' has no attribute 'Session'", "rewritten_intent": "Tensorflow.keras.backend", "snippet": "hello  = tf.constant(\"Hello\")\nf = tf.function(example)\nprint(eval(f([], hello)))", "question_id": 59780}, {"intent": "I want to get the numbers out of the string and get them together.", "snippet": "pattern=r\"([0-9]*)\"\nlist=re.findall(pattern,text)", "question_id": 38276, "rewritten_intent": "Extract only the numbers from the \u2018text\u2019 string and make the list \u2018list\u2019 "}, {"intent": "Matplotlib's upper limit is set, and the upper limit is automatically set.", "snippet": "rp = sns.regplot(x, y, data=df, order=1, line_kws={\"color\":\"indianred\"})\nrp.axes.set_ylim(0,)", "question_id": 49558, "rewritten_intent": "Set the lower limit value of y axis and the upper limit value becomes automatically "}, {"intent": "NoneType' object is not subscriptable Error", "rewritten_intent": "Change the order of \u2018word\u2019 by \u2018h\u2019", "snippet": "tmp1 = word[:h]\nword = word[h:]\nword.extend(tmp1)", "question_id": 65284}, {"intent": "I want to change the values of the variables included in the list.", "rewritten_intent": "For the number of all elements of the list 'attributes' minus 1.", "snippet": "for i, attribute in enumerate(attributes):\n    attributes[i] = attribute-1", "question_id": 31916}, {"intent": "I want to change the values of the variables included in the list.", "rewritten_intent": "For the number of all elements of the list 'attributes' minus 1.", "snippet": "for i in range(len(attributes)):\n    attributes[i] = attributes[i]-1", "question_id": 31916}, {"intent": "I want to change the values of the variables included in the list.", "rewritten_intent": "For the number of all elements of the list 'attributes' minus 1.", "snippet": "attributes = [attribute-1 for attribute in attributes]", "question_id": 31916}, {"intent": "Extrakting elements that match the conditions of a two-dimensional list in Python", "snippet": "c = Counter(map(tuple, list))", "question_id": 21171, "rewritten_intent": "Extract only duplicated elements from the two-dimensional list 'list' "}, {"intent": "I would like to write several TXT files at a time in Python.", "rewritten_intent": "Enter the number of the number of the file in thetxt file 'data{}.txt`", "snippet": "data = [None] * num_of_file\nfor i in range(num_of_file):\n    with open('data{}.txt'.format(i + 1), mode=\"r\", encoding=\"utf-8\") as f:\n        data[i] = f.read()", "question_id": 45204}, {"intent": "TypeError comes out and cannot be executed.", "snippet": "urllib.parse.urlencode('string').encode('ascii')", "question_id": 24786, "rewritten_intent": "Convert the string to ascII "}, {"intent": "I want to restore the original image data from the results of scikit-learn (PCA).", "snippet": "pca = PCA()\npca.fit(imgAry)\npca_res = pca.transform(imgAry)\nrestoredImgAry = pca.inverse_transform(pca_res)", "question_id": 5822, "rewritten_intent": "Recover original image data from the results of PCA "}, {"intent": "It does not show the axis label of the chart painted in matplotlib.", "snippet": "plt.savefig(fnameF, dpi=200, bbox_inches=\"tight\", pad_inches=0.1)", "question_id": 42516, "rewritten_intent": "Adjust and save the size of the chart "}, {"intent": "I want to remove the two-dimensional layout list.", "rewritten_intent": "Remove empty elements from the two-dimensional list 'list'", "snippet": "list = [x for x in list if x]", "question_id": 18685}, {"intent": "I want to remove the two-dimensional layout list.", "rewritten_intent": "Remove empty elements from the two-dimensional list 'list'", "snippet": "for i in range(len(list) - 1, -1, -1):\n  if not list[i]:\n    del list[i]", "question_id": 18685}, {"intent": "Comparison of data in pyserial.", "rewritten_intent": "Read the word \u2018ser\u2019 and display it.", "snippet": "while True:\n   if ser.inWaiting() > 0\n      data = ser.read(ser.inWaiting())\n      print(data)", "question_id": 8532}, {"intent": "How to get values from Json in Python 3.", "snippet": "json_obj = json.loads(json_string)", "question_id": 34692, "rewritten_intent": "Enter the JSON string 'json_string` into the object 'json_obj` "}, {"intent": "If you display a grey color image in OpenCv, the white becomes yellow.", "snippet": "gray_img = cv2.cvtColor(img, cv2.COLOR_RGB2GRAY)\nplt.imshow(gray_img)\nplt.gray()\nplt.show()", "question_id": 35864, "rewritten_intent": "Displaying the color image 'img' in the grey collar "}, {"intent": "When you savefig with the matplotlib pyplot, the number of x axis labels is too high.", "snippet": "plt.xticks(range(0, len(labels), ticks), labels[::ticks])", "question_id": 49478, "rewritten_intent": "X axis intervals to 'ticks' and label to 'labels' "}, {"intent": "I want to upload CSV or Excel files at once in python.", "snippet": "book_list = []\nfor n in range(1, num_of_file + 1):\n    file_name = 'excel_file%d.xls' % (n)\n    book_list.append(xlrd.open_workbook(file_name))", "question_id": 16769, "rewritten_intent": "Enter the number_of_file\u2019s Excel file \u2018excel_file\u2019 into the list "}, {"intent": "IndexError:too many indices for array", "snippet": "data=np.genfromtxt('file.csv', delimiter=',')", "question_id": 24388, "rewritten_intent": "Enter the CSV file 'file.csv' "}, {"intent": "Search for Unix Time from a Python datetime object.", "snippet": "dt.timestamp()", "question_id": 2220, "rewritten_intent": "Unix Time from a datetime object`dt` "}, {"intent": "I want to find out how to extract only the lines that contain a certain string.", "snippet": "df[df['col_name'].str.contains('string')]", "question_id": 44723, "rewritten_intent": "Extract lines containing a specific string in the 'col_name` line from the data frame 'df` "}, {"intent": "I am not sure how it works.ImportError: No module named 'config'", "rewritten_intent": "Import the module file 'file.py' from the top directory.", "snippet": "from .. import file.py", "question_id": 39007}, {"intent": "I want to get out of the end of the list.", "rewritten_intent": "Take out one element from the end of the list 'n'", "snippet": "list[-n:]", "question_id": 46711}, {"intent": "Conversion of Python text code: Conversion from UTF-16 to UTF-8", "rewritten_intent": "Convert the 'b_string' by Unicode to a string.", "snippet": "b_string.decode('unicode-escape')", "question_id": 17648}, {"intent": "For example, you would like to edit a text file from Python, but there is a better way than to write one line for a time to a file when it is stored.", "rewritten_intent": "Substitute the object 'old_s' in the 'str' string to another 'new_s' string", "snippet": "str.replace(old_s, new_s)", "question_id": 9633}, {"intent": "I want to determine the entry of the airline to input in python3, but EOFError does not occur.", "rewritten_intent": "Accept the standard entry until the airway is entered.", "snippet": "while True:\n  try:\n    line = input()\n    if line == '':\n        break\n    else:\n        yield line\n    except EOFError:\n        break", "question_id": 37327}, {"intent": "When using Keras, you don\u2019t get a log out in the calculation path.", "snippet": "model.fit(X, Y, epochs=200, batch_size=1, verbose=0)", "question_id": 37831, "rewritten_intent": "Learning a model without trying to log out "}, {"intent": "Repeat Attribute Error.", "snippet": "str.encode('utf-8')", "question_id": 53340, "rewritten_intent": "Convert the string 'str' into a byte "}, {"intent": "I want to automatically change the name of DataFrame in Python for circle.", "snippet": "for i in range(n):\n    df[i] = pd.DataFrame()", "question_id": 45120, "rewritten_intent": "The element is a data frame that makes a list of elements'n's number "}, {"intent": "I want to replace a continuous all-round blank with one all-round blank.", "snippet": "re.sub('[\\u3000]{2,}', '\\u3000', str)", "question_id": 24987, "rewritten_intent": "Replace multiple full-angle blankes in a string 'str` by one full-angle blank "}, {"intent": "I want to read the variables defined in the external file in forms.py.", "rewritten_intent": "Import the module file 'file.py' from the directory of the same layer", "snippet": "from . import file.py", "question_id": 33012}, {"intent": "Save the Python image first.", "snippet": "cv2.imwrite('file.jpg', img)", "question_id": 50500, "rewritten_intent": "Save the image 'img' as file name 'file.jpg' "}, {"intent": "What is python numpy?", "snippet": "np.dot(a, b)", "question_id": 41336, "rewritten_intent": "Calculate the volume of a\u2019 and b\u2019 "}, {"intent": "I want to convert a .txt file into a .csv file.", "snippet": "df = pd.read_table('file.txt', header=None, delim_whitespace=True)\ndf.to_csv('new_file.csv', index=False, header=False)", "question_id": 48742, "rewritten_intent": "Convert a blank text file 'file.txt' to a new_file.csv file "}, {"intent": "Can I set the number into the number of open functions in python?", "rewritten_intent": "Convert the number 'n' into a string.", "snippet": "str(n)", "question_id": 35271}, {"intent": "How to synthesize data on the way of a network in Chainer?", "snippet": "chainer.functions.concat([x1, x2], axis=1)", "question_id": 30337, "rewritten_intent": "Link the multi-channel ranges 'x1' and 'x2' "}, {"intent": "Recorder of the Jupyter Notebook", "snippet": "@profile \ndef function():\n    #function_code", "question_id": 49825, "rewritten_intent": "Check the memory use of the function "}, {"intent": "I want to get a number of numbers in a line.", "rewritten_intent": "Get multiple total values in input.", "snippet": "a,b,c = map(int,input().split())", "question_id": 53030}, {"intent": "Using python to remove duplicate sequences from two-dimensional sequences", "snippet": "c = Counter(tuple(x) for x in li)\n[list(k) for k,v in c.items() if v >=2]", "question_id": 20048, "rewritten_intent": "Remove duplicated elements in the two-dimensional list`li` "}, {"intent": "Comparing one-dimensional lists in Python and removing the same elements", "rewritten_intent": "Compare two list `li` and `li2` and remove duplicated elements.", "snippet": "list(filter(lambda x:x not in li2, li))", "question_id": 21070}, {"intent": "The total of the three complete numbers taken from the list is zero.", "rewritten_intent": "From a list 'li' that has a whole number in an element, a total of three complete numbers are required to be zero.", "snippet": "li.sort()\nM = len(li) - 1\nfor i, e in enumerate(li):\n    j = i + 1\n    k = M\n    while k > j:\n        s = li[i] + li[j] + li[k]\n        if s == 0:\n            print(li[i], li[j], li[k])\n            k -= 1\n        elif s > 0:\n            k -= 1\n        else:\n            j += 1", "question_id": 19098}, {"intent": "I want to use MeCab in python3, but it comes to an error called 'utf-8' codec can't decode 'utf-8' codec can't decode.", "snippet": "mecab = MeCab.Tagger('-Ochasen')\ninfo = mecab.dictionary_info()\nprint(info.charset)", "question_id": 42804, "rewritten_intent": "Showing the word code of the dictionary data "}, {"intent": "Learn more about Word 2vec.", "rewritten_intent": "Read the existing model 'old_model' and use data 'sentences' to learn and create a new model.", "snippet": "model = word2vec.Word2Vec.load('old_model')\nmodel.train(sentences)", "question_id": 29214}, {"intent": "How to use a number of elements in the NumPy array.", "snippet": "print(np.array2string(ary, separator=', ', formatter={'float_kind': lambda x: '{: .4f}'.format(x)}))", "question_id": 36377, "rewritten_intent": "Compare all elements of the array 'ary' and display them up to four digits "}, {"intent": "How to execute external commands in python and add the process to the output", "snippet": "contents = subprocess.check_output('cat file', shell=True)", "question_id": 23839, "rewritten_intent": "Call out the external process \u2018cat\u2019 and enter the inside of the file \u2018file\u2019 "}, {"intent": "I want to automatically determine the value of the error image and to double the value.", "snippet": "img = cv2.imread('file.png', 0)", "question_id": 34981, "rewritten_intent": "Enter the image 'file.png' in the grey collar "}, {"intent": "TensorFlow", "snippet": "print(sess.run(W))\nprint(sess.run(b))", "question_id": 25412, "rewritten_intent": "Displaying variables such as weight 'W' and bears 'b' "}, {"intent": "Failed to decode UTP-8 emails in Gmail in Python 3.6.0", "snippet": "base64.b64decode(s).decode()", "question_id": 33506, "rewritten_intent": "Decoding the 's' string symbolized by base64 "}, {"intent": "x and y must be the same size error.", "snippet": "plt.scatter(x, y)", "question_id": 24190, "rewritten_intent": "Display the spreadsheet of \u2018x\u2019 and \u2018y\u2019 "}, {"intent": "How do you use BeautifulSoup to save your content as a list?", "snippet": "soup = bs4.BeautifulSoup(html, 'lxml')\nunorder_list = soup.find_all('ul', id='front')\nnew_list = []\nfor ul_tag in unorder_list:\n    for li in ul_tag.find_all('li'):\n        new_list.append(li.text)\nprint(new_list)", "question_id": 40646, "rewritten_intent": "Enter a list without order in the HTML file 'html' as a list of Python "}, {"intent": "Comparing two CSV files in python and extracting duplicated values", "snippet": "df[df.duplicated(subset=col_lable)]", "question_id": 41775, "rewritten_intent": "Extract the lines that are duplicated by the column 'col_label' in the 'df' data frame "}, {"intent": "I want to build a pandas data frame.", "snippet": "pandas.crosstab(df[col_1], df[col_2]).plot(kind='bar',stacked=True)", "question_id": 33034, "rewritten_intent": "The results have been cross-assembled on the \u2018col_1\u2019 and \u2018col_2\u2019 of the \u2018df\u2019 data frame to build a chart "}, {"intent": "Search duplicate elements in the python list", "rewritten_intent": "Get and display all the indices of the elements that match the value 'v' to search from list 'li'.", "snippet": "ans = []\nfor index, value in enumerate(li):\n    if value == v:\n        ans.append(index)", "question_id": 23246}, {"intent": "Search duplicate elements in the python list", "rewritten_intent": "Get and display all the indices of the elements that match the value 'v' to search from list 'li'.", "snippet": "ans = [ i for i, value in enumerate(li) if value == v]", "question_id": 23246}, {"intent": "Remove a key that may not exist from dict in Python", "rewritten_intent": "Remove the key `k` that may not exist within a dictionary object `d`", "snippet": "d.pop(k, None) ", "question_id": 30088}, {"intent": "Comparison of two data frames.", "snippet": "df.drop_duplicates(subset=col_lable)", "question_id": 41700, "rewritten_intent": "Remove the line in which the column 'col_label' in the 'df' data frame is duplicated "}, {"intent": "I wanted to get Python Datetime last month.", "snippet": "today = datetime.date.today()\nprevious_month = today - dateutil.relativedelta.relativedelta(months=1)", "question_id": 30824, "rewritten_intent": "Get a date from now to a month ago "}, {"intent": "I want to get the RSSI value of Bluetooth using Python.", "snippet": "bluetooth.byte_to_signed_int()", "question_id": 30882, "rewritten_intent": "Get the Bluetooth RSSI value "}, {"intent": "How to do not change in Python input()", "rewritten_intent": "Remove blank and modified from the 'str' string.", "snippet": "str.strip()", "question_id": 42011}, {"intent": "I want to draw up a spectrogram that can be painted with data by the pylab.", "snippet": "f,t,Sxx = signal.spectrogram(data, fs)\nplt.pcolormesh(t, f, Sxx)", "question_id": 23218, "rewritten_intent": "Sample frequency 'fs' to signal data and display spectrum programs "}, {"intent": "Conversion of Shift-jis bytes type in python to utf-8 string", "rewritten_intent": "Decoding the string 'sjis_str' coded by Shift_JIS", "snippet": "sjis_str.decode('shift-jis')", "question_id": 39255}, {"intent": "Conversions of CSV file data type: even as astype, dtype does not change", "snippet": "df[col] = df[col].astype(str)", "question_id": 41519, "rewritten_intent": "Change the column 'col' in the 'df' data frame "}]